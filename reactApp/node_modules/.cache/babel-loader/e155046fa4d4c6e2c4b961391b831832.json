{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\pages\\\\tvHomePage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getTvShows } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport AddToFavoritesIconTV from \"../components/cardIcons/addToFavoritesTV\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TvListPage = props => {\n  _s();\n\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery('discover2', getTvShows);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  const tvs = data.results; // Redundant, but necessary to avoid app crashing.\n\n  const favoritesTV = tvs.filter(m => m.favoriteTV);\n  localStorage.setItem('favoritesTV', JSON.stringify(favoritesTV));\n\n  const addToFavoritesTV = tvId => true;\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Discover TV Shows\",\n    tvs: tvs,\n    action: tv => {\n      return /*#__PURE__*/_jsxDEV(AddToFavoritesIconTV, {\n        tv: tv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TvListPage, \"gRWcc9Q6k3CVvKOllxZBlhahD78=\", false, function () {\n  return [useQuery];\n});\n\n_c = TvListPage;\nexport default TvListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvListPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/pages/tvHomePage.js"],"names":["React","useQuery","getTvShows","Spinner","PageTemplate","AddToFavoritesIconTV","TvListPage","props","data","error","isLoading","isError","message","tvs","results","favoritesTV","filter","m","favoriteTV","localStorage","setItem","JSON","stringify","addToFavoritesTV","tvId","tv"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,oBAAP,MAAiC,0CAAjC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAGC,IAAAA,IAAH;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAwCV,QAAQ,CAAC,WAAD,EAAcC,UAAd,CAAtD;;AAEA,MAAIQ,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,OAAJ,EAAa;AACT,wBAAO;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,QAAMC,GAAG,GAAGL,IAAI,CAACM,OAAjB,CAV0B,CAY1B;;AACA,QAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACC,UAAlB,CAApB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAApC;;AACA,QAAMQ,gBAAgB,GAAIC,IAAD,IAAU,IAAnC;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,GAAG,EAAEX,GAFT;AAGI,IAAA,MAAM,EAAGY,EAAD,IAAQ;AACZ,0BAAO,QAAC,oBAAD;AAAsB,QAAA,EAAE,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1BD;;GAAMnB,U;UAC4CL,Q;;;KAD5CK,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport {useQuery} from \"react-query\";\nimport {getTvShows} from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport AddToFavoritesIconTV from \"../components/cardIcons/addToFavoritesTV\";\n\nconst TvListPage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover2', getTvShows)\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const tvs = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favoritesTV = tvs.filter(m => m.favoriteTV)\n    localStorage.setItem('favoritesTV', JSON.stringify(favoritesTV))\n    const addToFavoritesTV = (tvId) => true\n\n    return (\n        <PageTemplate\n            title=\"Discover TV Shows\"\n            tvs={tvs}\n            action={(tv) => {\n                return <AddToFavoritesIconTV tv={tv} />\n            }}\n        />\n    );\n};\nexport default TvListPage;"]},"metadata":{},"sourceType":"module"}