{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\templateMovieListPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../movieList\";\nimport { Button, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { QueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    padding: \"20px\"\n  }\n});\nexport const handleSort = event => {\n  if (event === 'popularity.desc') {\n    QueryClient.refetchQueries();\n    return 'popularity.desc';\n  } else if (event === 'revenue.desc') {\n    QueryClient.refetchQueries();\n    return 'revenue.desc';\n  } else if (event === 'release_date.desc') {\n    QueryClient.refetchQueries();\n    return 'release_date.desc';\n  }\n};\n\nfunction MovieListPageTemplate(_ref) {\n  _s();\n\n  let {\n    movies,\n    title,\n    action\n  } = _ref;\n  const classes = useStyles();\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const genreId = Number(genreFilter);\n  let displayedMovies = movies.filter(m => {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(m => {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"large\",\n      onClick: e => window.confirm(\"Are you a human?\"),\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        action: action,\n        movies: displayedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Sort By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"Sort by\",\n        name: \"row-radio-buttons-group\",\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"popularity.desc\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 74\n          }, this),\n          label: \"Popularity\",\n          onChange: handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"revenue.desc\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 71\n          }, this),\n          label: \"Revenue\",\n          onChange: handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"release_date.desc\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 76\n          }, this),\n          label: \"Release date\",\n          onChange: handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieListPageTemplate, \"UbR29HIEZVvFAh2t+2o2pqKI+7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieListPageTemplate;\nexport default MovieListPageTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListPageTemplate\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/templateMovieListPage/index.js"],"names":["React","useState","Header","FilterCard","Grid","makeStyles","MovieList","Button","FormControlLabel","FormLabel","Radio","RadioGroup","FormControl","QueryClient","useStyles","root","padding","handleSort","event","refetchQueries","MovieListPageTemplate","movies","title","action","classes","nameFilter","setNameFilter","genreFilter","setGenreFilter","genreId","Number","displayedMovies","filter","m","toLowerCase","search","genre_ids","includes","handleChange","type","value","e","window","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../movieList\";\nimport {Button, FormControlLabel, FormLabel, Radio, RadioGroup} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {QueryClient} from \"react-query\";\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"20px\",\n    },\n});\n\n\nexport const handleSort = (event) => {\n    if (event === 'popularity.desc') {\n        QueryClient.refetchQueries();\n        return 'popularity.desc'\n\n    } else if (event === 'revenue.desc') {\n        QueryClient.refetchQueries();\n        return 'revenue.desc'\n    } else if (event === 'release_date.desc') {\n        QueryClient.refetchQueries();\n        return 'release_date.desc'\n\n    }\n}\n\nfunction MovieListPageTemplate({ movies, title, action }) {\n    const classes = useStyles();\n    const [nameFilter, setNameFilter] = useState(\"\");\n    const [genreFilter, setGenreFilter] = useState(\"0\");\n    const genreId = Number(genreFilter);\n\n    let displayedMovies = movies\n        .filter((m) => {\n            return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n        })\n        .filter((m) => {\n            return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n        })\n\n    const handleChange = (type, value) => {\n        if (type === \"name\") setNameFilter(value);\n        else setGenreFilter(value);\n    };\n\n\n    return (\n\n        <Grid container className={classes.root}>\n            <Grid item xs={12}>\n                <Header title={title} />\n            </Grid>\n            <Button size=\"large\" onClick={e =>\n                window.confirm(\"Are you a human?\")\n            }>Confirm</Button>\n            <Grid item container spacing={5}>\n                <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n                    <FilterCard\n                        onUserInput={handleChange}\n                        titleFilter={nameFilter}\n                        genreFilter={genreFilter}\n                    />\n                </Grid>\n                <MovieList action={action} movies={displayedMovies}></MovieList>\n            </Grid>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Sort By</FormLabel>\n                <RadioGroup row aria-label=\"Sort by\" name=\"row-radio-buttons-group\">\n                    <FormControlLabel value={\"popularity.desc\"} control={<Radio />} label=\"Popularity\" onChange={handleSort} />\n                    <FormControlLabel value={\"revenue.desc\"} control={<Radio />} label=\"Revenue\" onChange={handleSort}/>\n                    <FormControlLabel value={\"release_date.desc\"} control={<Radio />} label=\"Release date\" onChange={handleSort}/>\n                </RadioGroup>\n            </FormControl>\n\n\n        </Grid>\n    );\n}\nexport default MovieListPageTemplate;"]},"metadata":{},"sourceType":"module"}