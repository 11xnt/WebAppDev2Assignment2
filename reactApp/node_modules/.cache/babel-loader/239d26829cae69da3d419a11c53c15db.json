{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\loginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [userName, setUserName] = useState(\"\");\n\n  const login = () => {\n    context.authenticate(userName);\n  }; // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n\n\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (context.isAuthenticated === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: from\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You must log in to view the protected pages \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"username\",\n      placeholder: \"user name\",\n      onChange: e => {\n        setUserName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Not Registered?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginPage, \"E+MrJ/XQlybM2V1bbHaLb9I6CU8=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/loginPage.js"],"names":["React","useContext","useState","Redirect","AuthContext","Link","LoginPage","props","context","userName","setUserName","login","authenticate","from","location","state","pathname","isAuthenticated","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMS,KAAK,GAAG,MAAM;AAChBH,IAAAA,OAAO,CAACI,YAAR,CAAqBH,QAArB;AACH,GAFD,CAJuB,CAQvB;AACA;;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWN,KAAK,CAACO,QAAN,CAAeC,KAAf,IAAwB;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAzC;;AAEA,MAAIR,OAAO,CAACS,eAAR,KAA4B,IAAhC,EAAsC;AAClC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,WAAW,EAAC,WAAjC;AAA6C,MAAA,QAAQ,EAAEK,CAAC,IAAI;AACxDR,QAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKe;AAAA;AAAA;AAAA;AAAA,YALf,eAOI;AAAQ,MAAA,OAAO,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,iDACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAaH,CA5BD;;GAAML,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n    const context = useContext(AuthContext)\n    const [userName, setUserName] = useState(\"\");\n\n    const login = () => {\n        context.authenticate(userName);\n    };\n\n    // Set 'from' to path where browser is redirected after a successful login.\n    // Either / or the protected path user tried to access.\n    const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n    if (context.isAuthenticated === true) {\n        return <Redirect to={from} />;\n    }\n    return (\n        <>\n            <h2>Login page</h2>\n            <p>You must log in to view the protected pages </p>\n            <input id=\"username\" placeholder=\"user name\" onChange={e => {\n                setUserName(e.target.value);\n            }}></input><br />\n            {/* Login web form  */}\n            <button onClick={login}>Log in</button>\n            <p>Not Registered?\n                <Link to=\"/signup\">Sign Up!</Link></p>\n        </>\n    );\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}