{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\tvCard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png';\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TvContext } from \"../../contexts/tvContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 500\n  },\n  avatar: {\n    backgroundColor: \"rgb(255, 0, 0)\"\n  }\n});\nexport default function TvCard(_ref) {\n  _s();\n\n  var tv = _ref.tv,\n      action = _ref.action;\n  var classes = useStyles();\n\n  var _useContext = useContext(TvContext),\n      favoritesTV = _useContext.favoritesTV,\n      addToFavoritesTV = _useContext.addToFavoritesTV;\n\n  if (favoritesTV.find(function (id) {\n    return id === tv.id;\n  })) {\n    tv.favoriteTV = true;\n  } else {\n    tv.favoriteTV = false;\n  }\n\n  var handleAddToFavoriteTV = function handleAddToFavoriteTV(e) {\n    e.preventDefault();\n    addToFavoritesTV(tv);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes.header,\n      avatar: tv.favoriteTV ? /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this) : null,\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"p\",\n        children: [tv.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: tv.poster_path ? \"https://image.tmdb.org/t/p/w500/\".concat(tv.poster_path) : img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"p\",\n            children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), tv.first_air_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"p\",\n            children: [/*#__PURE__*/_jsxDEV(StarRateIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), \"  \", \" \", tv.vote_average, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      children: [action(tv), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tvshows/\".concat(tv.id),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"medium\",\n          color: \"primary\",\n          children: \"More Info ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TvCard, \"t8o+atILbs2pChYBmFzXxevDJZQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = TvCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvCard\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/tvCard/index.js"],"names":["React","useContext","makeStyles","Card","CardActions","CardContent","CardMedia","CardHeader","Button","Typography","FavoriteIcon","CalendarIcon","StarRateIcon","IconButton","Grid","img","Link","Avatar","TvContext","useStyles","card","maxWidth","media","height","avatar","backgroundColor","TvCard","tv","action","classes","favoritesTV","addToFavoritesTV","find","id","favoriteTV","handleAddToFavoriteTV","e","preventDefault","header","name","poster_path","first_air_date","vote_average"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TvContext } from \"../../contexts/tvContext\";\n\nconst useStyles = makeStyles({\n    card: { maxWidth: 345 },\n    media: { height: 500 },\n    avatar: {\n        backgroundColor: \"rgb(255, 0, 0)\",\n    },\n});\n\nexport default function TvCard({ tv, action }) {\n    const classes = useStyles();\n    const { favoritesTV, addToFavoritesTV } = useContext(TvContext);\n\n    if (favoritesTV.find((id) => id === tv.id)) {\n        tv.favoriteTV = true;\n    } else {\n        tv.favoriteTV = false\n    }\n\n\n    const handleAddToFavoriteTV = (e) => {\n        e.preventDefault();\n        addToFavoritesTV(tv);\n    };\n\n\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.header}\n                avatar={\n                    tv.favoriteTV ? (\n                        <Avatar className={classes.avatar}>\n                            <FavoriteIcon />\n                        </Avatar>\n                    ) : null\n                }\n                title={\n                    <Typography variant=\"h5\" component=\"p\">\n                        {tv.name}{\" \"}\n                    </Typography>\n                }\n            />\n            <CardMedia\n                className={classes.media}\n                image={\n                    tv.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${tv.poster_path}`\n                        : img\n                }\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <CalendarIcon fontSize=\"small\" />\n                            {tv.first_air_date}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <StarRateIcon fontSize=\"small\" />\n                            {\"  \"} {tv.vote_average}{\" \"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions disableSpacing>\n                {action(tv)}\n                <Link to={`/tvshows/${tv.id}`}>\n                <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n                    More Info ...\n                </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}"]},"metadata":{},"sourceType":"module"}