{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\pages\\\\upcomingMoviesPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList';\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UpcomingMoviesPage = function UpcomingMoviesPage(props) {\n  _s();\n\n  var _useQuery = useQuery('discover3', getUpcomingMovies),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, _this);\n  }\n\n  var movies1 = data.results; // Redundant, but necessary to avoid app crashing.\n\n  var favorites = movies1.filter(function (m) {\n    return m.favorite;\n  });\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n\n  var addToFavorites = function addToFavorites(movieId) {\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Upcoming Movies\",\n    movies: movies1,\n    action: function action(movie) {\n      return /*#__PURE__*/_jsxDEV(AddToWatchListIcon, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UpcomingMoviesPage, \"gRWcc9Q6k3CVvKOllxZBlhahD78=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpcomingMoviesPage;\nexport default UpcomingMoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingMoviesPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/pages/upcomingMoviesPage.js"],"names":["React","PageTemplate","useQuery","Spinner","AddToWatchListIcon","getUpcomingMovies","UpcomingMoviesPage","props","data","error","isLoading","isError","message","movies1","results","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","addToFavorites","movieId","movie"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA;;AAClC,kBAA8CL,QAAQ,CAAC,WAAD,EAAcG,iBAAd,CAAtD;AAAA,MAASG,IAAT,aAASA,IAAT;AAAA,MAAeC,KAAf,aAAeA,KAAf;AAAA,MAAsBC,SAAtB,aAAsBA,SAAtB;AAAA,MAAiCC,OAAjC,aAAiCA,OAAjC;;AAEA,MAAID,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAIC,OAAJ,EAAa;AACT,wBAAO;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AACD,MAAMC,OAAO,GAAGL,IAAI,CAACM,OAArB,CAVkC,CAYlC;;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,MAAR,CAAe,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,QAAN;AAAA,GAAhB,CAAlB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAlC;;AACA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;AAAA,WAAa,IAAb;AAAA,GAAvB;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,MAAM,EAAEX,OAFZ;AAGI,IAAA,MAAM,EAAE,gBAACY,KAAD,EAAW;AACf,0BAAO,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CA1BD;;GAAMnB,kB;UAC4CJ,Q;;;KAD5CI,kB;AA2BN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList'\nimport {getUpcomingMovies} from \"../api/tmdb-api\";\n\nconst UpcomingMoviesPage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover3', getUpcomingMovies)\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const movies1 = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favorites = movies1.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    const addToFavorites = (movieId) => true\n\n    return (\n        <PageTemplate\n            title='Upcoming Movies'\n            movies={movies1}\n            action={(movie) => {\n                return <AddToWatchListIcon movie={movie} />\n            }}\n        />\n    );\n};\nexport default UpcomingMoviesPage;"]},"metadata":{},"sourceType":"module"}