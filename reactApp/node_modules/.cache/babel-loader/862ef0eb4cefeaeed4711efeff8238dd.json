{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\privateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  _s();\n\n  const context = useContext(AuthContext); // Destructure props from <privateRoute>\n\n  const {\n    component: Component,\n    ...rest\n  } = props;\n  console.log(props.location);\n  return context.isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 43\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\",\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/privateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","props","context","component","Component","rest","console","log","location","isAuthenticated","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,WAAR,QAA0B,eAA1B;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,OAAO,GAAGN,UAAU,CAACG,WAAD,CAA1B,CAD0B,CAE1B;;AACA,QAAM;AAAEI,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,MAAoCJ,KAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAlB;AACA,SAAON,OAAO,CAACO,eAAR,KAA4B,IAA5B,gBACH,QAAC,KAAD,OAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAEJ,KAAK,iBAAI,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH,QAAC,QAAD;AACI,IAAA,EAAE,EAAE;AACAS,MAAAA,QAAQ,EAAE,QADV;AAEAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEX,KAAK,CAACO;AAAd;AAFP;AADR;AAAA;AAAA;AAAA;AAAA,UAHJ;AAUH,CAfD;;GAAMR,Y;;KAAAA,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import React, { useContext} from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {AuthContext} from './authContext'\n\nconst PrivateRoute = props => {\n    const context = useContext(AuthContext)\n    // Destructure props from <privateRoute>\n    const { component: Component, ...rest } = props;\n    console.log(props.location)\n    return context.isAuthenticated === true ? (\n        <Route {...rest} render={props => <Component {...props} />} />\n    ) : (\n        <Redirect\n            to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}