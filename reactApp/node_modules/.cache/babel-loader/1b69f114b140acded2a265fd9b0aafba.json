{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\pages\\\\favoriteTvsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport { TvContext } from \"../contexts/tvContext\";\nimport { useQueries } from \"react-query\";\nimport { getTvShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FavoriteTvsPage = () => {\n  _s();\n\n  const {\n    favoritesTV: tvIds\n  } = useContext(TvContext); // Create an array of queries and run in parallel.\n\n  const favoriteTvQueries = useQueries(tvIds.map(tvId => {\n    return {\n      queryKey: [\"tv\", {\n        id: tvId\n      }],\n      queryFn: getTvShow\n    };\n  })); // Check if any of the parallel queries is still loading.\n\n  const isLoading = favoriteTvQueries.find(m => m.isLoading === true);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  const tvs = favoriteTvQueries.map(q => q.data);\n\n  const toDo = () => true;\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite TV shows\",\n    tvs: tvs,\n    action: tv => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RemoveFromFavoritesTV, {\n          tv: tv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FavoriteTvsPage, \"8MS2DFeBBLidBrxSDaqe0vPRJeU=\", false, function () {\n  return [useQueries];\n});\n\n_c = FavoriteTvsPage;\nexport default FavoriteTvsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteTvsPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/pages/favoriteTvsPage.js"],"names":["React","useContext","PageTemplate","TvContext","useQueries","getTvShow","Spinner","RemoveFromFavoritesTV","FavoriteTvsPage","favoritesTV","tvIds","favoriteTvQueries","map","tvId","queryKey","id","queryFn","isLoading","find","m","tvs","q","data","toDo","tv"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,WAAW,EAAEC;AAAd,MAAwBT,UAAU,CAACE,SAAD,CAAxC,CAD0B,CAG1B;;AACA,QAAMQ,iBAAiB,GAAGP,UAAU,CAChCM,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAChB,WAAO;AACHC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AAAEC,QAAAA,EAAE,EAAEF;AAAN,OAAP,CADP;AAEHG,MAAAA,OAAO,EAAEX;AAFN,KAAP;AAIH,GALD,CADgC,CAApC,CAJ0B,CAY1B;;AACA,QAAMY,SAAS,GAAGN,iBAAiB,CAACO,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACF,SAAF,KAAgB,IAA9C,CAAlB;;AAEA,MAAIA,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,QAAMG,GAAG,GAAGT,iBAAiB,CAACC,GAAlB,CAAuBS,CAAD,IAAOA,CAAC,CAACC,IAA/B,CAAZ;;AACA,QAAMC,IAAI,GAAG,MAAM,IAAnB;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,GAAG,EAAEH,GAFT;AAGI,IAAA,MAAM,EAAGI,EAAD,IAAQ;AACZ,0BACI;AAAA,+BACI,QAAC,qBAAD;AAAuB,UAAA,EAAE,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlCD;;GAAMhB,e;UAIwBJ,U;;;KAJxBI,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport { TvContext } from \"../contexts/tvContext\";\nimport { useQueries } from \"react-query\";\nimport { getTvShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\n\nconst FavoriteTvsPage = () => {\n    const {favoritesTV: tvIds } = useContext(TvContext);\n\n    // Create an array of queries and run in parallel.\n    const favoriteTvQueries = useQueries(\n        tvIds.map((tvId) => {\n            return {\n                queryKey: [\"tv\", { id: tvId }],\n                queryFn: getTvShow,\n            };\n        })\n    );\n    // Check if any of the parallel queries is still loading.\n    const isLoading = favoriteTvQueries.find((m) => m.isLoading === true);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    const tvs = favoriteTvQueries.map((q) => q.data);\n    const toDo = () => true;\n\n    return (\n        <PageTemplate\n            title=\"Favorite TV shows\"\n            tvs={tvs}\n            action={(tv) => {\n                return (\n                    <>\n                        <RemoveFromFavoritesTV tv={tv} />\n                    </>\n                );\n            }}\n        />\n    );\n};\n\nexport default FavoriteTvsPage;"]},"metadata":{},"sourceType":"module"}