{"ast":null,"code":"import _defineProperty from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\contexts\\\\moviesContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var MoviesContext = /*#__PURE__*/React.createContext(null);\n\nvar MoviesContextProvider = function MoviesContextProvider(props) {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      myReviews = _useState2[0],\n      setMyReviews = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      favorites = _useState4[0],\n      setFavorites = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      watchLists = _useState6[0],\n      setWatchList = _useState6[1];\n\n  var addToFavorites = function addToFavorites(movie) {\n    setFavorites([].concat(_toConsumableArray(favorites), [movie.id]));\n  }; // We will use this function in a later section\n\n\n  var removeFromFavorites = function removeFromFavorites(movie) {\n    setFavorites(favorites.filter(function (mId) {\n      return mId !== movie.id;\n    }));\n  };\n\n  var addToWatchList = function addToWatchList(movie) {\n    setWatchList([].concat(_toConsumableArray(watchLists), [movie.id]));\n    console.log([].concat(_toConsumableArray(watchLists), [movie.id]));\n  }; // We will use this function in a later section\n\n\n  var removeFromWatchLists = function removeFromWatchLists(movie) {\n    setWatchList(watchLists.filter(function (mId) {\n      return mId !== movie.id;\n    }));\n  };\n\n  var addReview = function addReview(movie, review) {\n    setMyReviews(_objectSpread(_objectSpread({}, myReviews), {}, _defineProperty({}, movie.id, review)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      favorites: favorites,\n      addToFavorites: addToFavorites,\n      removeFromFavorites: removeFromFavorites,\n      addReview: addReview,\n      addToWatchList: addToWatchList,\n      removeFromWatchLists: removeFromWatchLists\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MoviesContextProvider, \"/le4N1EnsotXc9REbtelD1E5F6Q=\");\n\n_c = MoviesContextProvider;\nexport default MoviesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesContextProvider\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/contexts/moviesContext.js"],"names":["React","useState","MoviesContext","createContext","MoviesContextProvider","props","myReviews","setMyReviews","favorites","setFavorites","watchLists","setWatchList","addToFavorites","movie","id","removeFromFavorites","filter","mId","addToWatchList","console","log","removeFromWatchLists","addReview","review","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,IAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB,IAApB,CAAtB;;AAEP,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AAAA;;AACrC,kBAAkCJ,QAAQ,CAAE,EAAF,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkCN,QAAQ,CAAE,EAAF,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAmCR,QAAQ,CAAE,EAAF,CAA3C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,YAAnB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9BJ,IAAAA,YAAY,8BAAKD,SAAL,IAAeK,KAAK,CAACC,EAArB,GAAZ;AACH,GAFD,CALqC,CAQrC;;;AACA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,KAAD,EAAW;AACnCJ,IAAAA,YAAY,CAAED,SAAS,CAACQ,MAAV,CACV,UAACC,GAAD;AAAA,aAASA,GAAG,KAAKJ,KAAK,CAACC,EAAvB;AAAA,KADU,CAAF,CAAZ;AAGH,GAJD;;AAMA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAW;AAC9BF,IAAAA,YAAY,8BAAKD,UAAL,IAAgBG,KAAK,CAACC,EAAtB,GAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,8BAAgBV,UAAhB,IAA2BG,KAAK,CAACC,EAAjC;AACH,GAHD,CAfqC,CAqBrC;;;AACA,MAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACR,KAAD,EAAW;AACpCF,IAAAA,YAAY,CAAED,UAAU,CAACM,MAAX,CACV,UAACC,GAAD;AAAA,aAASA,GAAG,KAAKJ,KAAK,CAACC,EAAvB;AAAA,KADU,CAAF,CAAZ;AAGH,GAJD;;AAMA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACT,KAAD,EAAQU,MAAR,EAAmB;AACjChB,IAAAA,YAAY,iCAAMD,SAAN,2BAAkBO,KAAK,CAACC,EAAxB,EAA6BS,MAA7B,GAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,SAAS,EAATA,SADG;AAEHI,MAAAA,cAAc,EAAdA,cAFG;AAGHG,MAAAA,mBAAmB,EAAnBA,mBAHG;AAIHO,MAAAA,SAAS,EAATA,SAJG;AAKHJ,MAAAA,cAAc,EAAdA,cALG;AAMHG,MAAAA,oBAAoB,EAApBA;AANG,KADX;AAAA,cAUKhB,KAAK,CAACmB;AAVX;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CA9CD;;GAAMpB,qB;;KAAAA,qB;AAgDN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nexport const MoviesContext = React.createContext(null);\n\nconst MoviesContextProvider = (props) => {\n    const [myReviews, setMyReviews] = useState( {} )\n    const [favorites, setFavorites] = useState( [] )\n    const [watchLists, setWatchList] = useState( [] )\n\n    const addToFavorites = (movie) => {\n        setFavorites([...favorites,movie.id])\n    };\n    // We will use this function in a later section\n    const removeFromFavorites = (movie) => {\n        setFavorites( favorites.filter(\n            (mId) => mId !== movie.id\n        ) )\n    };\n\n    const addToWatchList = (movie) => {\n        setWatchList([...watchLists,movie.id])\n        console.log([...watchLists,movie.id]);\n    };\n\n\n    // We will use this function in a later section\n    const removeFromWatchLists = (movie) => {\n        setWatchList( watchLists.filter(\n            (mId) => mId !== movie.id\n        ) )\n    };\n\n    const addReview = (movie, review) => {\n        setMyReviews( {...myReviews, [movie.id]: review } )\n    };\n\n    return (\n        <MoviesContext.Provider\n            value={{\n                favorites,\n                addToFavorites,\n                removeFromFavorites,\n                addReview,\n                addToWatchList,\n                removeFromWatchLists,\n            }}\n        >\n            {props.children}\n        </MoviesContext.Provider>\n    );\n};\n\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}