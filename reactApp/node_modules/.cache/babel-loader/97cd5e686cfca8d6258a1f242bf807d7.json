{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\pages\\\\favoriteTvsPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport { TvContext } from \"../contexts/tvContext\";\nimport { useQueries } from \"react-query\";\nimport { getTvShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar FavoriteTvsPage = function FavoriteTvsPage() {\n  _s();\n\n  var _useContext = useContext(TvContext),\n      tvIds = _useContext.favoritesTV; // Create an array of queries and run in parallel.\n\n\n  var favoriteTvQueries = useQueries(tvIds.map(function (tvId) {\n    return {\n      queryKey: [\"tv\", {\n        id: tvId\n      }],\n      queryFn: getTvShow\n    };\n  })); // Check if any of the parallel queries is still loading.\n\n  var isLoading = favoriteTvQueries.find(function (m) {\n    return m.isLoading === true;\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, _this);\n  }\n\n  var tvs = favoriteTvQueries.map(function (q) {\n    return q.data;\n  });\n\n  var toDo = function toDo() {\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite TV shows\",\n    tvs: tvs,\n    action: function action(tv) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RemoveFromFavoritesTV, {\n          tv: tv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FavoriteTvsPage, \"8MS2DFeBBLidBrxSDaqe0vPRJeU=\", false, function () {\n  return [useQueries];\n});\n\n_c = FavoriteTvsPage;\nexport default FavoriteTvsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteTvsPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/pages/favoriteTvsPage.js"],"names":["React","useContext","PageTemplate","TvContext","useQueries","getTvShow","Spinner","RemoveFromFavoritesTV","FavoriteTvsPage","tvIds","favoritesTV","favoriteTvQueries","map","tvId","queryKey","id","queryFn","isLoading","find","m","tvs","q","data","toDo","tv"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAC1B,oBAA8BP,UAAU,CAACE,SAAD,CAAxC;AAAA,MAAoBM,KAApB,eAAOC,WAAP,CAD0B,CAG1B;;;AACA,MAAMC,iBAAiB,GAAGP,UAAU,CAChCK,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;AAChB,WAAO;AACHC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AAAEC,QAAAA,EAAE,EAAEF;AAAN,OAAP,CADP;AAEHG,MAAAA,OAAO,EAAEX;AAFN,KAAP;AAIH,GALD,CADgC,CAApC,CAJ0B,CAY1B;;AACA,MAAMY,SAAS,GAAGN,iBAAiB,CAACO,IAAlB,CAAuB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACF,SAAF,KAAgB,IAAvB;AAAA,GAAvB,CAAlB;;AAEA,MAAIA,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AACD,MAAMG,GAAG,GAAGT,iBAAiB,CAACC,GAAlB,CAAsB,UAACS,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAT;AAAA,GAAtB,CAAZ;;AACA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAM,IAAN;AAAA,GAAb;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,GAAG,EAAEH,GAFT;AAGI,IAAA,MAAM,EAAE,gBAACI,EAAD,EAAQ;AACZ,0BACI;AAAA,+BACI,QAAC,qBAAD;AAAuB,UAAA,EAAE,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH;AATL;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CAlCD;;GAAMhB,e;UAIwBJ,U;;;KAJxBI,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport { TvContext } from \"../contexts/tvContext\";\nimport { useQueries } from \"react-query\";\nimport { getTvShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\n\nconst FavoriteTvsPage = () => {\n    const {favoritesTV: tvIds } = useContext(TvContext);\n\n    // Create an array of queries and run in parallel.\n    const favoriteTvQueries = useQueries(\n        tvIds.map((tvId) => {\n            return {\n                queryKey: [\"tv\", { id: tvId }],\n                queryFn: getTvShow,\n            };\n        })\n    );\n    // Check if any of the parallel queries is still loading.\n    const isLoading = favoriteTvQueries.find((m) => m.isLoading === true);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    const tvs = favoriteTvQueries.map((q) => q.data);\n    const toDo = () => true;\n\n    return (\n        <PageTemplate\n            title=\"Favorite TV shows\"\n            tvs={tvs}\n            action={(tv) => {\n                return (\n                    <>\n                        <RemoveFromFavoritesTV tv={tv} />\n                    </>\n                );\n            }}\n        />\n    );\n};\n\nexport default FavoriteTvsPage;"]},"metadata":{},"sourceType":"module"}