{"ast":null,"code":"import _slicedToArray from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\templateTvListPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../headerTvList\";\nimport FilterCard from \"../filterTvCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TvList from \"../tvList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles({\n  root: {\n    padding: \"20px\"\n  }\n});\n\nfunction TvListPageTemplate(_ref) {\n  _s();\n\n  var tvs = _ref.tvs,\n      title = _ref.title,\n      action = _ref.action;\n  var classes = useStyles();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameFilter = _useState2[0],\n      setNameFilter = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genreFilter = _useState4[0],\n      setGenreFilter = _useState4[1];\n\n  var genreId = Number(genreFilter);\n  var displayedTvs = tvs.filter(function (m) {\n    return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(function (m) {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n\n  var handleChange = function handleChange(type, value) {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TvList, {\n        action: action,\n        tvs: displayedTvs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TvListPageTemplate, \"UbR29HIEZVvFAh2t+2o2pqKI+7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = TvListPageTemplate;\nexport default TvListPageTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvListPageTemplate\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/templateTvListPage/index.js"],"names":["React","useState","Header","FilterCard","Grid","makeStyles","TvList","useStyles","root","padding","TvListPageTemplate","tvs","title","action","classes","nameFilter","setNameFilter","genreFilter","setGenreFilter","genreId","Number","displayedTvs","filter","m","name","toLowerCase","search","genre_ids","includes","handleChange","type","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP;AADmB,CAAD,CAA5B;;AAOA,SAASC,kBAAT,OAAoD;AAAA;;AAAA,MAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAChD,MAAMC,OAAO,GAAGP,SAAS,EAAzB;;AACA,kBAAoCN,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsCf,QAAQ,CAAC,GAAD,CAA9C;AAAA;AAAA,MAAOgB,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,OAAO,GAAGC,MAAM,CAACH,WAAD,CAAtB;AAEA,MAAII,YAAY,GAAGV,GAAG,CACjBW,MADc,CACP,UAACC,CAAD,EAAO;AACX,WAAOA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,MAArB,CAA4BX,UAAU,CAACU,WAAX,EAA5B,MAA0D,CAAC,CAAlE;AACH,GAHc,EAIdH,MAJc,CAIP,UAACC,CAAD,EAAO;AACX,WAAOJ,OAAO,GAAG,CAAV,GAAcI,CAAC,CAACI,SAAF,CAAYC,QAAZ,CAAqBT,OAArB,CAAd,GAA8C,IAArD;AACH,GANc,CAAnB;;AAOA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,QAAID,IAAI,KAAK,MAAb,EAAqBd,aAAa,CAACe,KAAD,CAAb,CAArB,KACKb,cAAc,CAACa,KAAD,CAAd;AACR,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEjB,OAAO,CAACN,IAAnC;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEI;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAA,8BACI,QAAC,IAAD;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,EAAE,EAAE,EAA1B;AAA8B,QAAA,EAAE,EAAE,CAAlC;AAAqC,QAAA,EAAE,EAAE,CAAzC;AAA4C,QAAA,EAAE,EAAE,CAAhD;AAAmD,QAAA,EAAE,EAAE,CAAvD;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,WAAW,EAAEiB,YADjB;AAEI,UAAA,WAAW,EAAEd,UAFjB;AAGI,UAAA,WAAW,EAAEE;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAU,MAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEJ,MAAhB;AAAwB,QAAA,GAAG,EAAEQ;AAA7B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAnCQX,kB;UACWH,S;;;KADXG,kB;AAoCT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../headerTvList\";\nimport FilterCard from \"../filterTvCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TvList from \"../tvList\";\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"20px\",\n    },\n});\n\n\nfunction TvListPageTemplate({ tvs, title, action }) {\n    const classes = useStyles();\n    const [nameFilter, setNameFilter] = useState(\"\");\n    const [genreFilter, setGenreFilter] = useState(\"0\");\n    const genreId = Number(genreFilter);\n\n    let displayedTvs = tvs\n        .filter((m) => {\n            return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n        })\n        .filter((m) => {\n            return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n        });\n    const handleChange = (type, value) => {\n        if (type === \"name\") setNameFilter(value);\n        else setGenreFilter(value);\n    };\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item xs={12}>\n                <Header title={title} />\n            </Grid>\n            <Grid item container spacing={5}>\n                <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n                    <FilterCard\n                        onUserInput={handleChange}\n                        titleFilter={nameFilter}\n                        genreFilter={genreFilter}\n                    />\n                </Grid>\n                <TvList action={action} tvs={displayedTvs}></TvList>\n            </Grid>\n        </Grid>\n    );\n}\nexport default TvListPageTemplate;"]},"metadata":{},"sourceType":"module"}