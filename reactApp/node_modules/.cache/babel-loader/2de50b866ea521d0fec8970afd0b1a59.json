{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\authContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const userArray = [\"test1\"];\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n\n  const authenticate = username => {\n    if (userArray.includes(username)) {\n      setIsAuthenticated(true);\n      setUserName(username);\n    }\n  };\n\n  const register = async username => {\n    userArray.push(username);\n  };\n\n  const signout = () => {\n    setTimeout(() => setIsAuthenticated(false), 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      authenticate,\n      register,\n      signout,\n      userName\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"VHvp4CDdvhb0WFhn0M9KNPbln1s=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/authContext.js"],"names":["React","useState","createContext","AuthContext","userArray","AuthContextProvider","props","isAuthenticated","setIsAuthenticated","userName","setUserName","authenticate","username","includes","register","push","signout","setTimeout","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CAAC,IAAD,CAAjC;AACP,OAAO,MAAME,SAAS,GAAG,CAAC,OAAD,CAAlB;;AACP,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMU,YAAY,GAAIC,QAAD,IAAc;AAC/B,QAAGR,SAAS,CAACS,QAAV,CAAmBD,QAAnB,CAAH,EAAiC;AAC7BJ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,MAAAA,WAAW,CAACE,QAAD,CAAX;AACH;AACJ,GALD;;AAOA,QAAME,QAAQ,GAAG,MAAOF,QAAP,IAAoB;AACjCR,IAAAA,SAAS,CAACW,IAAV,CAAeH,QAAf;AACH,GAFD;;AAIA,QAAMI,OAAO,GAAG,MAAM;AAClBC,IAAAA,UAAU,CAAC,MAAMT,kBAAkB,CAAC,KAAD,CAAzB,EAAkC,GAAlC,CAAV;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,eADG;AAEHI,MAAAA,YAFG;AAGHG,MAAAA,QAHG;AAIHE,MAAAA,OAJG;AAKHP,MAAAA;AALG,KADX;AAAA,cASKH,KAAK,CAACY;AATX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjCD;;GAAMb,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\nexport const userArray = [\"test1\"];\r\nconst AuthContextProvider = (props) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n\r\n    const authenticate = (username) => {\r\n        if(userArray.includes(username)) {\r\n            setIsAuthenticated(true);\r\n            setUserName(username);\r\n        }\r\n    };\r\n\r\n    const register = async (username) => {\r\n        userArray.push(username)\r\n    };\r\n\r\n    const signout = () => {\r\n        setTimeout(() => setIsAuthenticated(false), 100);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                authenticate,\r\n                register,\r\n                signout,\r\n                userName\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}