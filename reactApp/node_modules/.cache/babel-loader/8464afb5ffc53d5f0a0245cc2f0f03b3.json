{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\siteHeader\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { withRouter } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n  offset: theme.mixins.toolbar\n}));\n\nconst SiteHeader = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const menuOptions = [{\n    label: \"Home\",\n    path: \"/\"\n  }, {\n    label: \"Favorites\",\n    path: \"/movies/favorites\"\n  }, {\n    label: \"Upcoming\",\n    path: \"/movies/upcoming\"\n  }, {\n    label: \"Top Rated\",\n    path: \"/movies/toprated\"\n  }, {\n    label: \"Tv Shows\",\n    path: \"/tvshows\"\n  }, {\n    label: \"Favorite Tv Shows\",\n    path: \"/tvshows/favorites\"\n  }];\n\n  const handleMenuSelect = pageURL => {\n    history.push(pageURL);\n  };\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: classes.title,\n          children: \"TMDB Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"All you ever wanted to know about Movies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"menu\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorEl,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            open: open,\n            onClose: () => setAnchorEl(null),\n            children: menuOptions.map(opt => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: () => handleMenuSelect(opt.path),\n              children: opt.label\n            }, opt.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: menuOptions.map(opt => /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => handleMenuSelect(opt.path),\n            children: opt.label\n          }, opt.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this))\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.offset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SiteHeader, \"cvs+8Dqm00DRXKVg4xb8+M2rYZc=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = SiteHeader;\nexport default _c2 = withRouter(SiteHeader);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SiteHeader\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/siteHeader/index.js"],"names":["React","useState","makeStyles","AppBar","Toolbar","Typography","IconButton","Button","MenuIcon","MenuItem","Menu","withRouter","useTheme","useMediaQuery","useStyles","theme","title","flexGrow","offset","mixins","toolbar","SiteHeader","history","classes","anchorEl","setAnchorEl","open","Boolean","isMobile","breakpoints","down","menuOptions","label","path","handleMenuSelect","pageURL","push","handleMenu","event","currentTarget","vertical","horizontal","map","opt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { withRouter } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        flexGrow: 1,\n    },\n    offset: theme.mixins.toolbar,\n}));\n\nconst SiteHeader = ( { history }) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    const menuOptions = [\n        { label: \"Home\", path: \"/\" },\n        { label: \"Favorites\", path: \"/movies/favorites\" },\n        { label: \"Upcoming\", path: \"/movies/upcoming\" },\n        { label: \"Top Rated\", path: \"/movies/toprated\" },\n        { label: \"Tv Shows\", path: \"/tvshows\" },\n        { label: \"Favorite Tv Shows\", path: \"/tvshows/favorites\" },\n    ];\n\n    const handleMenuSelect = (pageURL) => {\n        history.push(pageURL);\n    };\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    return (\n        <>\n            <AppBar position=\"fixed\" color=\"secondary\">\n                <Toolbar>\n                    <Typography variant=\"h4\" className={classes.title}>\n                        TMDB Client\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        All you ever wanted to know about Movies!\n                    </Typography>\n                    {isMobile ? (\n                        <>\n                            <IconButton\n                                aria-label=\"menu\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                open={open}\n                                onClose={() => setAnchorEl(null)}\n                            >\n                                {menuOptions.map((opt) => (\n                                    <MenuItem\n                                        key={opt.label}\n                                        onClick={() => handleMenuSelect(opt.path)}\n                                    >\n                                        {opt.label}\n                                    </MenuItem>\n                                ))}\n                            </Menu>\n                        </>\n                    ) : (\n                        <>\n                            {menuOptions.map((opt) => (\n                                <Button\n                                    key={opt.label}\n                                    color=\"inherit\"\n                                    onClick={() => handleMenuSelect(opt.path)}\n                                >\n                                    {opt.label}\n                                </Button>\n                            ))}\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <div className={classes.offset} />\n        </>\n    );\n};\n\nexport default withRouter(SiteHeader);"]},"metadata":{},"sourceType":"module"}