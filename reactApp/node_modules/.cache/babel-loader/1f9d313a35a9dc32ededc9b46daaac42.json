{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\tvDetails\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport NumbersIcon from \"@material-ui/icons/FormatListNumbered\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(1.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nconst TvDetails = _ref => {\n  _s();\n\n  let {\n    tv\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      children: \"Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"p\",\n      children: tv.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"ul\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Genres\",\n          className: classes.chip,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), tv.genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: g.name,\n          className: classes.chip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, g.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"ul\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(NumbersIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this),\n        label: `${tv.number_of_episodes} episodes.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }, this),\n        label: `In Production: ${tv.in_production.toLocaleString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(StarRate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this),\n        label: `${tv.vote_average} (${tv.vote_count}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Released: ${tv.first_air_date}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"secondary\",\n      variant: \"extended\",\n      className: classes.fab,\n      children: [/*#__PURE__*/_jsxDEV(NavigationIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \"Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TvDetails, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TvDetails;\nexport default TvDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvDetails\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/tvDetails/index.js"],"names":["React","useState","Chip","Paper","VideocamIcon","NumbersIcon","StarRate","NavigationIcon","Fab","Typography","makeStyles","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","fab","position","bottom","right","TvDetails","tv","classes","overview","genres","map","g","name","number_of_episodes","in_production","toLocaleString","vote_average","vote_count","first_air_date"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport NumbersIcon from \"@material-ui/icons/FormatListNumbered\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        listStyle: \"none\",\n        padding: theme.spacing(1.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    fab: {\n        position: \"fixed\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n}));\n\nconst TvDetails = ({ tv }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h5\" component=\"h3\">\n                Overview\n            </Typography>\n\n            <Typography variant=\"h6\" component=\"p\">\n                {tv.overview}\n            </Typography>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <li>\n                    <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n                </li>\n                {tv.genres.map((g) => (\n                    <li key={g.name}>\n                        <Chip label={g.name} className={classes.chip} />\n                    </li>\n                ))}\n            </Paper>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <Chip icon={<NumbersIcon />} label={`${tv.number_of_episodes} episodes.`} />\n                <Chip\n                    icon={<VideocamIcon />}\n                    label={`In Production: ${tv.in_production.toLocaleString()}`}\n\n                />\n                <Chip\n                    icon={<StarRate />}\n                    label={`${tv.vote_average} (${tv.vote_count}`}\n                />\n                <Chip label={`Released: ${tv.first_air_date}`} />\n            </Paper>\n\n            <Fab\n                color=\"secondary\"\n                variant=\"extended\"\n                className={classes.fab}\n            >\n                <NavigationIcon />\n                Reviews\n            </Fab>\n        </>\n    );\n};\nexport default  TvDetails;"]},"metadata":{},"sourceType":"module"}