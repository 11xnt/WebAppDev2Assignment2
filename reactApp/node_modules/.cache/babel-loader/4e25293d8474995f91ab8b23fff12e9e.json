{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport var getMovies = function getMovies(args) {\n  var _args$queryKey = _slicedToArray(args.queryKey, 2),\n      idPart = _args$queryKey[1];\n\n  var id = idPart.id;\n  return fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&include_adult=false&sort_by=\").concat(id, \"&page=1\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getMovie = function getMovie(args) {\n  // console.log(args)\n  var _args$queryKey2 = _slicedToArray(args.queryKey, 2),\n      idPart = _args$queryKey2[1];\n\n  var id = idPart.id;\n  return fetch(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=\").concat(process.env.REACT_APP_TMDB_KEY)).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getGenres = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_TMDB_KEY + \"&language=en-US\").then(function (response) {\n              if (!response.ok) {\n                throw new Error(response.json().message);\n              }\n\n              return response.json();\n            }).catch(function (error) {\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getGenres() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTvGenres = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch(\"https://api.themoviedb.org/3/genre/tv/list?api_key=\" + process.env.REACT_APP_TMDB_KEY + \"&language=en-US\").then(function (response) {\n              if (!response.ok) {\n                throw new Error(response.json().message);\n              }\n\n              return response.json();\n            }).catch(function (error) {\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getTvGenres() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getMovieImages = function getMovieImages(_ref3) {\n  var queryKey = _ref3.queryKey;\n\n  var _queryKey = _slicedToArray(queryKey, 2),\n      idPart = _queryKey[1];\n\n  var id = idPart.id;\n  return fetch(\"https://api.themoviedb.org/3/movie/\".concat(id, \"/images?api_key=\").concat(process.env.REACT_APP_TMDB_KEY)).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getTvShowImages = function getTvShowImages(_ref4) {\n  var queryKey = _ref4.queryKey;\n\n  var _queryKey2 = _slicedToArray(queryKey, 2),\n      idPart = _queryKey2[1];\n\n  var id = idPart.id;\n  return fetch(\"https://api.themoviedb.org/3/tv/\".concat(id, \"/images?api_key=\").concat(process.env.REACT_APP_TMDB_KEY)).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getMovieReviews = function getMovieReviews(id) {\n  return fetch(\"https://api.themoviedb.org/3/movie/\".concat(id, \"/reviews?api_key=\").concat(process.env.REACT_APP_TMDB_KEY)).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    // console.log(json.results);\n    return json.results;\n  });\n};\nexport var getUpcomingMovies = function getUpcomingMovies() {\n  return fetch(\"https://api.themoviedb.org/3/movie/upcoming?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&page=1\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getTopRatedMovies = function getTopRatedMovies() {\n  return fetch(\"https://api.themoviedb.org/3/movie/top_rated?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&page=1\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getTvShows = function getTvShows() {\n  return fetch(\"https://api.themoviedb.org/3/discover/tv?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};\nexport var getTvShow = function getTvShow(args) {\n  // console.log(args)\n  var _args$queryKey3 = _slicedToArray(args.queryKey, 2),\n      idPart = _args$queryKey3[1];\n\n  var id = idPart.id;\n  return fetch(\"https://api.themoviedb.org/3/tv/\".concat(id, \"?api_key=\").concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    throw error;\n  });\n};","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/api/tmdb-api.js"],"names":["getMovies","args","queryKey","idPart","id","fetch","process","env","REACT_APP_TMDB_KEY","then","response","ok","Error","json","message","catch","error","getMovie","getGenres","getTvGenres","getMovieImages","getTvShowImages","getMovieReviews","res","results","getUpcomingMovies","getTopRatedMovies","getTvShows","getTvShow"],"mappings":"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","sourcesContent":["export const getMovies = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&sort_by=${id}&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getGenres = async () => {\r\n    return fetch(\r\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvGenres = async () => {\r\n        return fetch(\r\n            \"https://api.themoviedb.org/3/genre/tv/list?api_key=\" +\r\n            process.env.REACT_APP_TMDB_KEY +\r\n            \"&language=en-US\"\r\n        ).then( (response) => {\r\n            if (!response.ok) {\r\n                throw new Error(response.json().message);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch((error) => {\r\n                throw error\r\n            });\r\n    };\r\n\r\nexport const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\nexport const getTvShowImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieReviews = (id) => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            // console.log(json.results);\r\n            return json.results;\r\n        });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n    return fetch(\r\n            `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTopRatedMovies = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShows = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShow = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}