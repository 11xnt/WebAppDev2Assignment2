{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\contexts\\\\moviesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesContext = /*#__PURE__*/React.createContext(null);\n\nconst MoviesContextProvider = props => {\n  _s();\n\n  const [myReviews, setMyReviews] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [watchLists, setWatchList] = useState([]);\n\n  const addToFavorites = movie => {\n    setFavorites([...favorites, movie.id]);\n  }; // We will use this function in a later section\n\n\n  const removeFromFavorites = movie => {\n    setFavorites(favorites.filter(mId => mId !== movie.id));\n  };\n\n  const addToWatchList = movie => {\n    setWatchList([...watchLists, movie.id]);\n    console.log([...watchLists, movie.id]);\n  }; // We will use this function in a later section\n\n\n  const removeFromWatchLists = movie => {\n    setWatchList(watchLists.filter(mId => mId !== movie.id));\n  };\n\n  const addReview = (movie, review) => {\n    setMyReviews({ ...myReviews,\n      [movie.id]: review\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      addReview,\n      addToWatchList,\n      removeFromWatchLists\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviesContextProvider, \"/le4N1EnsotXc9REbtelD1E5F6Q=\");\n\n_c = MoviesContextProvider;\nexport default MoviesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesContextProvider\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/contexts/moviesContext.js"],"names":["React","useState","MoviesContext","createContext","MoviesContextProvider","props","myReviews","setMyReviews","favorites","setFavorites","watchLists","setWatchList","addToFavorites","movie","id","removeFromFavorites","filter","mId","addToWatchList","console","log","removeFromWatchLists","addReview","review","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB,IAApB,CAAtB;;AAEP,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,YAAb,IAA6BV,QAAQ,CAAE,EAAF,CAA3C;;AAEA,QAAMW,cAAc,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAcK,KAAK,CAACC,EAApB,CAAD,CAAZ;AACH,GAFD,CALqC,CAQrC;;;AACA,QAAMC,mBAAmB,GAAIF,KAAD,IAAW;AACnCJ,IAAAA,YAAY,CAAED,SAAS,CAACQ,MAAV,CACTC,GAAD,IAASA,GAAG,KAAKJ,KAAK,CAACC,EADb,CAAF,CAAZ;AAGH,GAJD;;AAMA,QAAMI,cAAc,GAAIL,KAAD,IAAW;AAC9BF,IAAAA,YAAY,CAAC,CAAC,GAAGD,UAAJ,EAAeG,KAAK,CAACC,EAArB,CAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGV,UAAJ,EAAeG,KAAK,CAACC,EAArB,CAAZ;AACH,GAHD,CAfqC,CAqBrC;;;AACA,QAAMO,oBAAoB,GAAIR,KAAD,IAAW;AACpCF,IAAAA,YAAY,CAAED,UAAU,CAACM,MAAX,CACTC,GAAD,IAASA,GAAG,KAAKJ,KAAK,CAACC,EADb,CAAF,CAAZ;AAGH,GAJD;;AAMA,QAAMQ,SAAS,GAAG,CAACT,KAAD,EAAQU,MAAR,KAAmB;AACjChB,IAAAA,YAAY,CAAE,EAAC,GAAGD,SAAJ;AAAe,OAACO,KAAK,CAACC,EAAP,GAAYS;AAA3B,KAAF,CAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,SADG;AAEHI,MAAAA,cAFG;AAGHG,MAAAA,mBAHG;AAIHO,MAAAA,SAJG;AAKHJ,MAAAA,cALG;AAMHG,MAAAA;AANG,KADX;AAAA,cAUKhB,KAAK,CAACmB;AAVX;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9CD;;GAAMpB,qB;;KAAAA,qB;AAgDN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nexport const MoviesContext = React.createContext(null);\n\nconst MoviesContextProvider = (props) => {\n    const [myReviews, setMyReviews] = useState( {} )\n    const [favorites, setFavorites] = useState( [] )\n    const [watchLists, setWatchList] = useState( [] )\n\n    const addToFavorites = (movie) => {\n        setFavorites([...favorites,movie.id])\n    };\n    // We will use this function in a later section\n    const removeFromFavorites = (movie) => {\n        setFavorites( favorites.filter(\n            (mId) => mId !== movie.id\n        ) )\n    };\n\n    const addToWatchList = (movie) => {\n        setWatchList([...watchLists,movie.id])\n        console.log([...watchLists,movie.id]);\n    };\n\n\n    // We will use this function in a later section\n    const removeFromWatchLists = (movie) => {\n        setWatchList( watchLists.filter(\n            (mId) => mId !== movie.id\n        ) )\n    };\n\n    const addReview = (movie, review) => {\n        setMyReviews( {...myReviews, [movie.id]: review } )\n    };\n\n    return (\n        <MoviesContext.Provider\n            value={{\n                favorites,\n                addToFavorites,\n                removeFromFavorites,\n                addReview,\n                addToWatchList,\n                removeFromWatchLists,\n            }}\n        >\n            {props.children}\n        </MoviesContext.Provider>\n    );\n};\n\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}