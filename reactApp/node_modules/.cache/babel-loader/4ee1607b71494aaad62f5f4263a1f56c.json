{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\pages\\\\homePage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PageTemplate, { handleSort } from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport { getMovies } from '../api/tmdb-api';\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  _s();\n\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"discover\", {\n    id: handleSort()\n  }], getMovies);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  const movies = data.results; // Redundant, but necessary to avoid app crashing.\n\n  const favorites = movies.filter(m => m.favorite);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n\n  const addToFavorites = movieId => true;\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Discover Movies\",\n    movies: movies,\n    action: movie => {\n      return /*#__PURE__*/_jsxDEV(AddToFavoritesIcon, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"gRWcc9Q6k3CVvKOllxZBlhahD78=\", false, function () {\n  return [useQuery];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/pages/homePage.js"],"names":["React","PageTemplate","handleSort","useQuery","Spinner","getMovies","AddToFavoritesIcon","HomePage","props","data","error","isLoading","isError","id","message","movies","results","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","addToFavorites","movieId","movie"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAsBC,UAAtB,QAAuC,qCAAvC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAGC,IAAAA,IAAH;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAwCT,QAAQ,CAClD,CAAC,UAAD,EAAa;AAAEU,IAAAA,EAAE,EAAEX,UAAU;AAAhB,GAAb,CADkD,EAElDG,SAFkD,CAAtD;;AAIA,MAAIM,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,OAAJ,EAAa;AACT,wBAAO;AAAA,gBAAKF,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,QAAMC,MAAM,GAAGN,IAAI,CAACO,OAApB,CAZwB,CAcxB;;AACA,QAAMC,SAAS,GAAGF,MAAM,CAACG,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACC,QAArB,CAAlB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAlC;;AACA,QAAMQ,cAAc,GAAIC,OAAD,IAAa,IAApC;;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,MAAM,EAAEX,MAFZ;AAGI,IAAA,MAAM,EAAGY,KAAD,IAAW;AACf,0BAAO,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA5BD;;GAAMpB,Q;UAC4CJ,Q;;;KAD5CI,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport PageTemplate, {handleSort} from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getMovies} from '../api/tmdb-api'\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\n\n\nconst HomePage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery(\n        [\"discover\", { id: handleSort()}],\n        getMovies\n    );\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const movies = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favorites = movies.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    const addToFavorites = (movieId) => true\n\n    return (\n        <PageTemplate\n            title=\"Discover Movies\"\n            movies={movies}\n            action={(movie) => {\n                return <AddToFavoritesIcon movie={movie} />\n            }}\n        />\n    );\n};\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}