{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\Documents\\\\GitHub\\\\WebAppDev2Assignment2\\\\reactApp\\\\src\\\\components\\\\templateTvPage\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TvHeader from \"../headerTv\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getTvShowImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\"\n    },\n    gridList: {\n      width: 450,\n      height: '100vh'\n    }\n  };\n});\n\nvar TemplateTvPage = function TemplateTvPage(_ref) {\n  _s();\n\n  var tv = _ref.tv,\n      children = _ref.children;\n  var classes = useStyles();\n\n  var _useQuery = useQuery([\"images1\", {\n    id: tv.id\n  }], getTvShowImages),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, _this);\n  }\n\n  var images1 = data.posters;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TvHeader, {\n      tv: tv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(GridList, {\n            cellHeight: 500,\n            className: classes.gridList,\n            cols: 1,\n            children: images1.map(function (image) {\n              return /*#__PURE__*/_jsxDEV(GridListTile, {\n                className: classes.gridListTile,\n                cols: 1,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://image.tmdb.org/t/p/w500/\".concat(image.file_path),\n                  alt: image.poster_path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, _this)\n              }, image.file_path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TemplateTvPage, \"Yn0g0/7bxMSkyqYRYtzKWyJvDGw=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = TemplateTvPage;\nexport default TemplateTvPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateTvPage\");","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/components/templateTvPage/index.js"],"names":["React","TvHeader","Grid","makeStyles","GridList","GridListTile","getTvShowImages","useQuery","Spinner","useStyles","theme","root","display","flexWrap","justifyContent","gridList","width","height","TemplateTvPage","tv","children","classes","id","data","error","isLoading","isError","message","images1","posters","padding","map","image","gridListTile","file_path","poster_path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TvHeader from \"../headerTv\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getTvShowImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n    },\n    gridList: {\n        width: 450,\n        height: '100vh',\n    },\n}));\n\nconst TemplateTvPage = ({ tv, children }) => {\n    const classes = useStyles();\n    const { data , error, isLoading, isError } = useQuery(\n        [\"images1\", { id : tv.id }],\n        getTvShowImages,\n    );\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>;\n    }\n    const images1 = data.posters\n\n    return (\n        <>\n            <TvHeader tv={tv} />\n\n            <Grid container spacing={5} style={{ padding: \"15px\" }}>\n                <Grid item xs={3}>\n                    <div className={classes.root}>\n                        <GridList cellHeight={500} className={classes.gridList} cols={1}>\n                            {images1.map((image) => (\n                                <GridListTile key={image.file_path} className={classes.gridListTile} cols={1}>\n                                    <img\n                                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                                        alt={image.poster_path}\n                                    />\n                                </GridListTile>\n                            ))}\n                        </GridList>\n                    </div>\n                </Grid>\n\n                <Grid item xs={9}>\n                    {children}\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default TemplateTvPage;"]},"metadata":{},"sourceType":"module"}