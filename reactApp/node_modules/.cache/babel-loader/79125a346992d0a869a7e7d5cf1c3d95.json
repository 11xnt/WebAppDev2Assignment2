{"ast":null,"code":"export const getMovies = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&sort_by=${id}&page=1`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovie = args => {\n  // console.log(args)\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getGenres = async () => {\n  return fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_TMDB_KEY + \"&language=en-US\").then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getTvGenres = async () => {\n  return fetch(\"https://api.themoviedb.org/3/genre/tv/list?api_key=\" + process.env.REACT_APP_TMDB_KEY + \"&language=en-US\").then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieImages = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getTvShowImages = _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieReviews = id => {\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(res => res.json()).then(json => {\n    // console.log(json.results);\n    return json.results;\n  });\n};\nexport const getUpcomingMovies = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getTopRatedMovies = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getTvShows = () => {\n  return fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getTvShow = args => {\n  // console.log(args)\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"sources":["C:/Users/allen/Documents/GitHub/WebAppDev2Assignment2/reactApp/src/api/tmdb-api.js"],"names":["getMovies","args","idPart","queryKey","id","fetch","process","env","REACT_APP_TMDB_KEY","then","response","ok","Error","json","message","catch","error","getMovie","getGenres","getTvGenres","getMovieImages","getTvShowImages","getMovieReviews","res","results","getUpcomingMovies","getTopRatedMovies","getTvShows","getTvShow"],"mappings":"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","sourcesContent":["export const getMovies = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&sort_by=${id}&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getGenres = async () => {\r\n    return fetch(\r\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvGenres = async () => {\r\n        return fetch(\r\n            \"https://api.themoviedb.org/3/genre/tv/list?api_key=\" +\r\n            process.env.REACT_APP_TMDB_KEY +\r\n            \"&language=en-US\"\r\n        ).then( (response) => {\r\n            if (!response.ok) {\r\n                throw new Error(response.json().message);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch((error) => {\r\n                throw error\r\n            });\r\n    };\r\n\r\nexport const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\nexport const getTvShowImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieReviews = (id) => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            // console.log(json.results);\r\n            return json.results;\r\n        });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n    return fetch(\r\n            `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTopRatedMovies = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShows = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShow = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}