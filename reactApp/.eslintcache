[{"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\index.js":"1","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\privateRoute.js":"2","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authContext.js":"3","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\signupPage.js":"4","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authHeader.js":"5","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\loginPage.js":"6","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieReviewPage.js":"7","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvDetailsPage.js":"8","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieDetailsPage.js":"9","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\homePage.js":"10","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteMoviesPage.js":"11","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvHomePage.js":"12","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteTvsPage.js":"13","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\topRatedMoviesPage.js":"14","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\upcomingMoviesPage.js":"15","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\addMovieReviewPage.js":"16","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\moviesContext.js":"17","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\tvContext.js":"18","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\siteHeader\\index.js":"19","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\tmdb-api.js":"20","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavorites.js":"21","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavorites.js":"22","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\writeReview.js":"23","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavoritesTV.js":"24","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavoritesTV.js":"25","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToWatchList.js":"26","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMoviePage\\index.js":"27","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\spinner\\index.js":"28","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvDetails\\index.js":"29","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReview\\index.js":"30","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieDetails\\index.js":"31","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvPage\\index.js":"32","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMovieListPage\\index.js":"33","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvListPage\\index.js":"34","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\reviewForm\\index.js":"35","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovie\\index.js":"36","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReviews\\index.js":"37","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTv\\index.js":"38","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvList\\index.js":"39","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterTvCard\\index.js":"40","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTvList\\index.js":"41","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieList\\index.js":"42","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterMoviesCard\\index.js":"43","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovieList\\index.js":"44","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieCard\\index.js":"45","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvCard\\index.js":"46","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\util.js":"47","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\movie-api.js":"48"},{"size":2991,"mtime":1640471192768,"results":"49","hashOfConfig":"50"},{"size":657,"mtime":1639186857000,"results":"51","hashOfConfig":"50"},{"size":1547,"mtime":1640471089708,"results":"52","hashOfConfig":"50"},{"size":1058,"mtime":1639186857000,"results":"53","hashOfConfig":"50"},{"size":634,"mtime":1640185149893,"results":"54","hashOfConfig":"50"},{"size":1402,"mtime":1640471128967,"results":"55","hashOfConfig":"50"},{"size":446,"mtime":1639186857000,"results":"56","hashOfConfig":"50"},{"size":973,"mtime":1639186857000,"results":"57","hashOfConfig":"50"},{"size":1013,"mtime":1639186857000,"results":"58","hashOfConfig":"50"},{"size":1088,"mtime":1639186857000,"results":"59","hashOfConfig":"50"},{"size":1512,"mtime":1640455522638,"results":"60","hashOfConfig":"50"},{"size":1027,"mtime":1639186857000,"results":"61","hashOfConfig":"50"},{"size":1344,"mtime":1639186857000,"results":"62","hashOfConfig":"50"},{"size":1071,"mtime":1639186857000,"results":"63","hashOfConfig":"50"},{"size":1068,"mtime":1639186857000,"results":"64","hashOfConfig":"50"},{"size":815,"mtime":1640455522629,"results":"65","hashOfConfig":"50"},{"size":1437,"mtime":1639186857000,"results":"66","hashOfConfig":"50"},{"size":774,"mtime":1639186857000,"results":"67","hashOfConfig":"50"},{"size":4356,"mtime":1640455451163,"results":"68","hashOfConfig":"50"},{"size":5063,"mtime":1640466942374,"results":"69","hashOfConfig":"50"},{"size":668,"mtime":1640185149895,"results":"70","hashOfConfig":"50"},{"size":728,"mtime":1640185149897,"results":"71","hashOfConfig":"50"},{"size":507,"mtime":1640185149899,"results":"72","hashOfConfig":"50"},{"size":660,"mtime":1640185149896,"results":"73","hashOfConfig":"50"},{"size":720,"mtime":1640185149898,"results":"74","hashOfConfig":"50"},{"size":677,"mtime":1640185149896,"results":"75","hashOfConfig":"50"},{"size":2095,"mtime":1640455451277,"results":"76","hashOfConfig":"50"},{"size":578,"mtime":1640455451201,"results":"77","hashOfConfig":"50"},{"size":2450,"mtime":1640455451432,"results":"78","hashOfConfig":"50"},{"size":233,"mtime":1640185149910,"results":"79","hashOfConfig":"50"},{"size":3347,"mtime":1640185149908,"results":"80","hashOfConfig":"50"},{"size":2034,"mtime":1640455451359,"results":"81","hashOfConfig":"50"},{"size":3008,"mtime":1640455451239,"results":"82","hashOfConfig":"50"},{"size":1618,"mtime":1640455451322,"results":"83","hashOfConfig":"50"},{"size":5955,"mtime":1640455962038,"results":"84","hashOfConfig":"50"},{"size":1669,"mtime":1640185149903,"results":"85","hashOfConfig":"50"},{"size":2602,"mtime":1640185149911,"results":"86","hashOfConfig":"50"},{"size":1617,"mtime":1640185149905,"results":"87","hashOfConfig":"50"},{"size":361,"mtime":1640455451468,"results":"88","hashOfConfig":"50"},{"size":3706,"mtime":1640185149902,"results":"89","hashOfConfig":"50"},{"size":1307,"mtime":1640185149906,"results":"90","hashOfConfig":"50"},{"size":405,"mtime":1640185149909,"results":"91","hashOfConfig":"50"},{"size":3699,"mtime":1640185149900,"results":"92","hashOfConfig":"50"},{"size":1305,"mtime":1640185149904,"results":"93","hashOfConfig":"50"},{"size":3600,"mtime":1640185149907,"results":"94","hashOfConfig":"50"},{"size":3323,"mtime":1640455451396,"results":"95","hashOfConfig":"50"},{"size":253,"mtime":1639186857000,"results":"96","hashOfConfig":"50"},{"size":611,"mtime":1640466945060,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"mdn67p",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"103"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"103"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"103"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"103"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"103"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\index.js",["209"],"import SiteHeader from './components/siteHeader'\nimport MovieReviewPage from \"./pages/movieReviewPage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport HomePage from \"./pages/homePage\";\nimport tvHomePage from \"./pages/tvHomePage\";\nimport MoviePage from \"./pages/movieDetailsPage\";\nimport TvPage from \"./pages/tvDetailsPage\";\nimport FavoriteMoviesPage from \"./pages/favoriteMoviesPage\";\nimport FavoriteTvsPage from \"./pages/favoriteTvsPage\";\nimport UpcomingMoviesPage from \"./pages/upcomingMoviesPage\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport MoviesContextProvider from \"./contexts/moviesContext\";\nimport AddMovieReviewPage from './pages/addMovieReviewPage'\nimport TopRatedMoviesPage from \"./pages/topRatedMoviesPage\";\nimport TvContextProvider from \"./contexts/tvContext\";\nimport AuthProvider from \"./authContext\";\nimport PrivateRoute from \"./privateRoute\";\nimport SignUpPage from \"./signupPage\";\nimport LoginPage from \"./loginPage\";\nimport AuthHeader from \"./authHeader\";\n\n\nconst queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            staleTime: 360000,\n            refetchInterval: 360000,\n            refetchOnWindowFocus: false\n        },\n    },\n});\n\nconst App = () => {\n    return (\n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <AuthProvider>\n                    <AuthHeader />\n                <SiteHeader />\n                <MoviesContextProvider>\n                    <TvContextProvider>\n            <Switch>\n            </Switch>\n            <Switch>\n                <Route exact path=\"/reviews/form\" component={AddMovieReviewPage} />\n                <Route exact path=\"/movies/upcoming\" component={UpcomingMoviesPage} />\n                <Route path=\"/reviews/:id\" component={MovieReviewPage} />\n                <PrivateRoute exact path=\"/movies/favorites\" component={FavoriteMoviesPage} />\n                <Route exact path=\"/movies/toprated\" component={TopRatedMoviesPage} />\n                <Route path=\"/movies/:id\" component={MoviePage} />\n                <PrivateRoute exact path=\"/tvshows/favorites\" component={FavoriteTvsPage} />\n                <Route path=\"/tvshows/:id\" component={TvPage} />\n                <Route path=\"/tvshows\" component={tvHomePage} />\n                <Route path=\"/signup\" component={SignUpPage} />\n                <Route path=\"/login\" component={LoginPage} />\n                <Route exact path=\"/\" component={HomePage} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n                    </TvContextProvider>\n                </MoviesContextProvider>\n            </AuthProvider>\n        </BrowserRouter>\n            <ReactQueryDevtools initialIsOpen={false} />\n        </QueryClientProvider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\privateRoute.js",[],["210","211"],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authContext.js",["212","213"],"import React, { useState, createContext } from \"react\";\r\nimport { login, signup } from \"./api/movie-api\";\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const existingToken = localStorage.getItem(\"token\");\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [authToken, setAuthToken] = useState(existingToken);\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    //Function to put JWT token in local storage.\r\n    const setToken = (data) => {\r\n        localStorage.setItem(\"token\", data);\r\n        setAuthToken(data);\r\n    }\r\n\r\n    const authenticate = async (username, password) => {\r\n        const result = await login(username, password);\r\n        if (result.token) {\r\n            setToken(result.token)\r\n            setIsAuthenticated(true);\r\n            setUserName(username);\r\n        }\r\n    };\r\n\r\n    const register = async (username, password) => {\r\n        const result = await signup(username, password);\r\n        console.log(result.code);\r\n        return (result.code == 201) ? true : false;\r\n    };\r\n\r\n    const signout = () => {\r\n        setTimeout(() => setIsAuthenticated(false), 100);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                authenticate,\r\n                register,\r\n                signout,\r\n                userName\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\signupPage.js",["214"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\n\nconst SignUpPage = props => {\n    const context = useContext(AuthContext)\n    const [userName, setUserName] = useState(\"\");\n    const [registered, setRegistered] = useState(false);\n\n    const register = () => {\n        if (userName.length > 3) {\n            context.register(userName);\n            setRegistered(true);\n        }\n    }\n\n    const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n    if (registered === true) {\n        return <Redirect to=\"./login\" />;\n    }\n\n    return (\n        <>\n            <h2>SignUp page</h2>\n            <p>You must register a username and password to log in </p>\n            <input value={userName} placeholder=\"user name\" onChange={e => {\n                setUserName(e.target.value);\n            }}></input><br />\n            {/* Login web form  */}\n            <button onClick={register}>Register</button>\n        </>\n    );\n};\n\nexport default SignUpPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authHeader.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\loginPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieReviewPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvDetailsPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieDetailsPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\homePage.js",["215"],"import React from \"react\";\nimport PageTemplate, {handleSort} from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getMovies} from '../api/tmdb-api'\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\n\n\nconst HomePage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery(\n        [\"discover\", { id: handleSort()}],\n        getMovies\n    );\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const movies = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favorites = movies.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    const addToFavorites = (movieId) => true\n\n    return (\n        <PageTemplate\n            title=\"Discover Movies\"\n            movies={movies}\n            action={(movie) => {\n                return <AddToFavoritesIcon movie={movie} />\n            }}\n        />\n    );\n};\n\nexport default HomePage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteMoviesPage.js",["216"],"import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\nconst FavoriteMoviesPage = () => {\n    const {favorites: movieIds } = useContext(MoviesContext);\n\n    // Create an array of queries and run in parallel.\n    const favoriteMovieQueries = useQueries(\n        movieIds.map((movieId) => {\n            return {\n                queryKey: [\"movie\", { id: movieId }],\n                queryFn: getMovie,\n            };\n        })\n    );\n    // Check if any of the parallel queries is still loading.\n    const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    const movies = favoriteMovieQueries.map((q) => q.data);\n    const toDo = () => true;\n\n    return (\n        <PageTemplate\n            title=\"Favorite Movies\"\n            movies={movies}\n            action={(movie) => {\n                return (\n                    <>\n                        <RemoveFromFavorites movie={movie} />\n                        <WriteReview movie={movie} />\n                    </>\n                );\n            }}\n        />\n    );\n};\n\nexport default FavoriteMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvHomePage.js",["217"],"import React from \"react\";\nimport {useQuery} from \"react-query\";\nimport {getTvShows} from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport AddToFavoritesIconTV from \"../components/cardIcons/addToFavoritesTV\";\n\nconst TvListPage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover2', getTvShows)\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const tvs = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favoritesTV = tvs.filter(m => m.favoriteTV)\n    localStorage.setItem('favoritesTV', JSON.stringify(favoritesTV))\n    const addToFavoritesTV = (tvId) => true\n\n    return (\n        <PageTemplate\n            title=\"Discover TV Shows\"\n            tvs={tvs}\n            action={(tv) => {\n                return <AddToFavoritesIconTV tv={tv} />\n            }}\n        />\n    );\n};\nexport default TvListPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteTvsPage.js",["218"],"import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateTvListPage\";\nimport { TvContext } from \"../contexts/tvContext\";\nimport { useQueries } from \"react-query\";\nimport { getTvShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\n\nconst FavoriteTvsPage = () => {\n    const {favoritesTV: tvIds } = useContext(TvContext);\n\n    // Create an array of queries and run in parallel.\n    const favoriteTvQueries = useQueries(\n        tvIds.map((tvId) => {\n            return {\n                queryKey: [\"tv\", { id: tvId }],\n                queryFn: getTvShow,\n            };\n        })\n    );\n    // Check if any of the parallel queries is still loading.\n    const isLoading = favoriteTvQueries.find((m) => m.isLoading === true);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    const tvs = favoriteTvQueries.map((q) => q.data);\n    const toDo = () => true;\n\n    return (\n        <PageTemplate\n            title=\"Favorite TV shows\"\n            tvs={tvs}\n            action={(tv) => {\n                return (\n                    <>\n                        <RemoveFromFavoritesTV tv={tv} />\n                    </>\n                );\n            }}\n        />\n    );\n};\n\nexport default FavoriteTvsPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\topRatedMoviesPage.js",["219"],"import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList'\nimport { getTopRatedMovies } from \"../api/tmdb-api\";\n\nconst TopRatedMoviesPage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover1', getTopRatedMovies)\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const movies2 = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favorites = movies2.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    const addToFavorites = (movieId) => true\n\n    return (\n        <PageTemplate\n            title='Top Rated Movies'\n            movies={movies2}\n            action={(movie) => {\n                return <AddToWatchListIcon movie={movie} />\n            }}\n        />\n    );\n};\nexport default TopRatedMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\upcomingMoviesPage.js",["220"],"import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList'\nimport {getUpcomingMovies} from \"../api/tmdb-api\";\n\nconst UpcomingMoviesPage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover3', getUpcomingMovies)\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>\n    }\n    const movies1 = data.results;\n\n    // Redundant, but necessary to avoid app crashing.\n    const favorites = movies1.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    const addToFavorites = (movieId) => true\n\n    return (\n        <PageTemplate\n            title='Upcoming Movies'\n            movies={movies1}\n            action={(movie) => {\n                return <AddToWatchListIcon movie={movie} />\n            }}\n        />\n    );\n};\nexport default UpcomingMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\addMovieReviewPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\moviesContext.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\tvContext.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\siteHeader\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\tmdb-api.js",["221"],"export const getMovies = (args) => {\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovie = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getGenres = async () => {\r\n    return fetch(\r\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvGenres = async () => {\r\n        return fetch(\r\n            \"https://api.themoviedb.org/3/genre/tv/list?api_key=\" +\r\n            process.env.REACT_APP_TMDB_KEY +\r\n            \"&language=en-US\"\r\n        ).then( (response) => {\r\n            if (!response.ok) {\r\n                throw new Error(response.json().message);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch((error) => {\r\n                throw error\r\n            });\r\n    };\r\n\r\nexport const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\nexport const getTvShowImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getMovieReviews = (id) => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            // console.log(json.results);\r\n            return json.results;\r\n        });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n    return fetch(\r\n            `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTopRatedMovies = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShows = () => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n\r\nexport const getTvShow = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    ).then((response) => {\r\n        if (!response.ok) {\r\n            throw new Error(response.json().message);\r\n        }\r\n        return response.json();\r\n    })\r\n        .catch((error) => {\r\n            throw error\r\n        });\r\n};\r\n","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavorites.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavorites.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\writeReview.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavoritesTV.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavoritesTV.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToWatchList.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMoviePage\\index.js",["222"],"import React from \"react\";\nimport MovieHeader from \"../headerMovie\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getMovieImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner'\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n    },\n    gridList: {\n        width: 450,\n        height: '100vh',\n    },\n}));\n\nconst TemplateMoviePage = ({ movie, children }) => {\n    const classes = useStyles();\n    const { data , error, isLoading, isError } = useQuery(\n        [\"images\", { id: movie.id }],\n        getMovieImages,\n    );\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>;\n    }\n    const images = data.posters\n\n    return (\n        <>\n            <MovieHeader movie={movie} />\n            <Grid container spacing={5} style={{ padding: \"15px\" }}>\n                <Grid item xs={3}>\n                    <div className={classes.root}>\n                        <GridList cellHeight={500} className={classes.gridList} cols={1}>\n                            {images.map((image) => (\n                                <GridListTile key={image.file_path} className={classes.gridListTile} cols={1}>\n                                    <img\n                                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                                        alt={image.poster_path}\n                                    />\n                                </GridListTile>\n                            ))}\n                        </GridList>\n                    </div>\n                </Grid>\n\n                <Grid item xs={9}>\n                    {children}\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default TemplateMoviePage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\spinner\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvDetails\\index.js",["223"],"import React, { useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport NumbersIcon from \"@material-ui/icons/FormatListNumbered\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        listStyle: \"none\",\n        padding: theme.spacing(1.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    fab: {\n        position: \"fixed\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n}));\n\nconst TvDetails = ({ tv }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h5\" component=\"h3\">\n                Overview\n            </Typography>\n\n            <Typography variant=\"h6\" component=\"p\">\n                {tv.overview}\n            </Typography>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <li>\n                    <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n                </li>\n                {tv.genres.map((g) => (\n                    <li key={g.name}>\n                        <Chip label={g.name} className={classes.chip} />\n                    </li>\n                ))}\n            </Paper>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <Chip icon={<NumbersIcon />} label={`${tv.number_of_episodes} episodes.`} />\n                <Chip\n                    icon={<VideocamIcon />}\n                    label={`In Production: ${tv.in_production.toLocaleString()}`}\n\n                />\n                <Chip\n                    icon={<StarRate />}\n                    label={`${tv.vote_average} (${tv.vote_count}`}\n                />\n                <Chip label={`Released: ${tv.first_air_date}`} />\n            </Paper>\n\n            <Fab\n                color=\"secondary\"\n                variant=\"extended\"\n                className={classes.fab}\n            >\n                <NavigationIcon />\n                Reviews\n            </Fab>\n        </>\n    );\n};\nexport default  TvDetails;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReview\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieDetails\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvPage\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMovieListPage\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvListPage\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\reviewForm\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovie\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReviews\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTv\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterTvCard\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTvList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterMoviesCard\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovieList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieCard\\index.js",["224","225","226","227","228"],"import React, { useContext  } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PlayListAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: { maxWidth: 345 },\r\n    media: { height: 500 },\r\n    avatar: {\r\n        backgroundColor: \"rgb(255, 0, 0)\",\r\n    },\r\n});\r\n\r\nexport default function MovieCard({ movie, action }) {\r\n    const classes = useStyles();\r\n    const { favorites, addToFavorites } = useContext(MoviesContext);\r\n    const { watchLists, addToWatchList } = useContext(MoviesContext);\r\n\r\n    if (favorites.find((id) => id === movie.id)) {\r\n        movie.favorite = true;\r\n    } else {\r\n        movie.favorite = false\r\n    }\r\n\r\n    const handleAddToFavorite = (e) => {\r\n        e.preventDefault();\r\n        addToFavorites(movie);\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardHeader\r\n                className={classes.header}\r\n                avatar={\r\n                    movie.favorite ? (\r\n                        <Avatar className={classes.avatar}>\r\n                            <FavoriteIcon />\r\n                        </Avatar>\r\n                    ) : null\r\n                }\r\n                title={\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {movie.title}{\" \"}\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={\r\n                    movie.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                        : img\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\">\r\n                            <CalendarIcon fontSize=\"small\" />\r\n                            {movie.release_date}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\">\r\n                            <StarRateIcon fontSize=\"small\" />\r\n                            {\"  \"} {movie.vote_average}{\" \"}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                {action(movie)}\r\n                <Link to={`/movies/${movie.id}`}>\r\n                    <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n                        More Info ...\r\n                    </Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvCard\\index.js",["229","230"],"import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TvContext } from \"../../contexts/tvContext\";\n\nconst useStyles = makeStyles({\n    card: { maxWidth: 345 },\n    media: { height: 500 },\n    avatar: {\n        backgroundColor: \"rgb(255, 0, 0)\",\n    },\n});\n\nexport default function TvCard({ tv, action }) {\n    const classes = useStyles();\n    const { favoritesTV, addToFavoritesTV } = useContext(TvContext);\n\n    if (favoritesTV.find((id) => id === tv.id)) {\n        tv.favoriteTV = true;\n    } else {\n        tv.favoriteTV = false\n    }\n\n\n    const handleAddToFavoriteTV = (e) => {\n        e.preventDefault();\n        addToFavoritesTV(tv);\n    };\n\n\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.header}\n                avatar={\n                    tv.favoriteTV ? (\n                        <Avatar className={classes.avatar}>\n                            <FavoriteIcon />\n                        </Avatar>\n                    ) : null\n                }\n                title={\n                    <Typography variant=\"h5\" component=\"p\">\n                        {tv.name}{\" \"}\n                    </Typography>\n                }\n            />\n            <CardMedia\n                className={classes.media}\n                image={\n                    tv.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${tv.poster_path}`\n                        : img\n                }\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <CalendarIcon fontSize=\"small\" />\n                            {tv.first_air_date}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <StarRateIcon fontSize=\"small\" />\n                            {\"  \"} {tv.vote_average}{\" \"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions disableSpacing>\n                {action(tv)}\n                <Link to={`/tvshows/${tv.id}`}>\n                <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n                    More Info ...\n                </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\util.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\movie-api.js",[],{"ruleId":"231","severity":1,"message":"232","line":5,"column":50,"nodeType":"233","messageId":"234","endLine":5,"endColumn":54},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"231","severity":1,"message":"239","line":9,"column":12,"nodeType":"233","messageId":"234","endLine":9,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":30,"column":29,"nodeType":"242","messageId":"243","endLine":30,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":17,"column":13,"nodeType":"233","messageId":"234","endLine":17,"endColumn":17},{"ruleId":"231","severity":1,"message":"245","line":26,"column":11,"nodeType":"233","messageId":"234","endLine":26,"endColumn":25},{"ruleId":"231","severity":1,"message":"246","line":29,"column":11,"nodeType":"233","messageId":"234","endLine":29,"endColumn":15},{"ruleId":"231","severity":1,"message":"247","line":23,"column":11,"nodeType":"233","messageId":"234","endLine":23,"endColumn":27},{"ruleId":"231","severity":1,"message":"246","line":28,"column":11,"nodeType":"233","messageId":"234","endLine":28,"endColumn":15},{"ruleId":"231","severity":1,"message":"245","line":23,"column":11,"nodeType":"233","messageId":"234","endLine":23,"endColumn":25},{"ruleId":"231","severity":1,"message":"245","line":23,"column":11,"nodeType":"233","messageId":"234","endLine":23,"endColumn":25},{"ruleId":"231","severity":1,"message":"248","line":3,"column":13,"nodeType":"233","messageId":"234","endLine":3,"endColumn":15},{"ruleId":"231","severity":1,"message":"249","line":10,"column":9,"nodeType":"233","messageId":"234","endLine":10,"endColumn":15},{"ruleId":"231","severity":1,"message":"250","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"251","line":11,"column":8,"nodeType":"233","messageId":"234","endLine":11,"endColumn":23},{"ruleId":"231","severity":1,"message":"252","line":14,"column":8,"nodeType":"233","messageId":"234","endLine":14,"endColumn":18},{"ruleId":"231","severity":1,"message":"253","line":32,"column":13,"nodeType":"233","messageId":"234","endLine":32,"endColumn":23},{"ruleId":"231","severity":1,"message":"254","line":32,"column":25,"nodeType":"233","messageId":"234","endLine":32,"endColumn":39},{"ruleId":"231","severity":1,"message":"255","line":40,"column":11,"nodeType":"233","messageId":"234","endLine":40,"endColumn":30},{"ruleId":"231","severity":1,"message":"252","line":13,"column":8,"nodeType":"233","messageId":"234","endLine":13,"endColumn":18},{"ruleId":"231","severity":1,"message":"256","line":39,"column":11,"nodeType":"233","messageId":"234","endLine":39,"endColumn":32},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["257"],"no-negated-in-lhs",["258"],"'authToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'from' is assigned a value but never used.","'addToFavorites' is assigned a value but never used.","'toDo' is assigned a value but never used.","'addToFavoritesTV' is assigned a value but never used.","'id' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'PlayListAddIcon' is defined but never used.","'IconButton' is defined but never used.","'watchLists' is assigned a value but never used.","'addToWatchList' is assigned a value but never used.","'handleAddToFavorite' is assigned a value but never used.","'handleAddToFavoriteTV' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]