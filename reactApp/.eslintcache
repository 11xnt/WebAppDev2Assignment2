[{"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\index.js":"1","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\privateRoute.js":"2","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authContext.js":"3","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\signupPage.js":"4","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authHeader.js":"5","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\loginPage.js":"6","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieReviewPage.js":"7","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvDetailsPage.js":"8","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieDetailsPage.js":"9","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\homePage.js":"10","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteMoviesPage.js":"11","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvHomePage.js":"12","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteTvsPage.js":"13","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\topRatedMoviesPage.js":"14","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\upcomingMoviesPage.js":"15","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\addMovieReviewPage.js":"16","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\moviesContext.js":"17","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\tvContext.js":"18","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\siteHeader\\index.js":"19","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavorites.js":"20","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavorites.js":"21","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\writeReview.js":"22","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavoritesTV.js":"23","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavoritesTV.js":"24","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToWatchList.js":"25","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMoviePage\\index.js":"26","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\spinner\\index.js":"27","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvDetails\\index.js":"28","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReview\\index.js":"29","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieDetails\\index.js":"30","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvPage\\index.js":"31","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMovieListPage\\index.js":"32","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvListPage\\index.js":"33","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\reviewForm\\index.js":"34","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovie\\index.js":"35","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReviews\\index.js":"36","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTv\\index.js":"37","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvList\\index.js":"38","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterTvCard\\index.js":"39","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTvList\\index.js":"40","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieList\\index.js":"41","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterMoviesCard\\index.js":"42","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovieList\\index.js":"43","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieCard\\index.js":"44","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvCard\\index.js":"45","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\util.js":"46","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\movie-api.js":"47","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages.js":"48"},{"size":3565,"mtime":1640902663991,"results":"49","hashOfConfig":"50"},{"size":657,"mtime":1639186857000,"results":"51","hashOfConfig":"50"},{"size":1547,"mtime":1640471089708,"results":"52","hashOfConfig":"50"},{"size":1558,"mtime":1640474535224,"results":"53","hashOfConfig":"50"},{"size":634,"mtime":1640185149893,"results":"54","hashOfConfig":"50"},{"size":1402,"mtime":1640471128967,"results":"55","hashOfConfig":"50"},{"size":446,"mtime":1640915803956,"results":"56","hashOfConfig":"50"},{"size":1014,"mtime":1640734004732,"results":"57","hashOfConfig":"50"},{"size":1054,"mtime":1640734004775,"results":"58","hashOfConfig":"50"},{"size":1226,"mtime":1641149137719,"results":"59","hashOfConfig":"50"},{"size":1559,"mtime":1640734004739,"results":"60","hashOfConfig":"50"},{"size":1062,"mtime":1640734004702,"results":"61","hashOfConfig":"50"},{"size":1389,"mtime":1640734004666,"results":"62","hashOfConfig":"50"},{"size":1106,"mtime":1640734004673,"results":"63","hashOfConfig":"50"},{"size":1116,"mtime":1640821969397,"results":"64","hashOfConfig":"50"},{"size":845,"mtime":1640734004687,"results":"65","hashOfConfig":"50"},{"size":2163,"mtime":1641147631827,"results":"66","hashOfConfig":"50"},{"size":1461,"mtime":1640902856694,"results":"67","hashOfConfig":"50"},{"size":4468,"mtime":1640733488552,"results":"68","hashOfConfig":"50"},{"size":668,"mtime":1640185149895,"results":"69","hashOfConfig":"50"},{"size":728,"mtime":1640185149897,"results":"70","hashOfConfig":"50"},{"size":507,"mtime":1640185149899,"results":"71","hashOfConfig":"50"},{"size":660,"mtime":1640185149896,"results":"72","hashOfConfig":"50"},{"size":720,"mtime":1640185149898,"results":"73","hashOfConfig":"50"},{"size":677,"mtime":1640185149896,"results":"74","hashOfConfig":"50"},{"size":2162,"mtime":1640734004747,"results":"75","hashOfConfig":"50"},{"size":578,"mtime":1640724196710,"results":"76","hashOfConfig":"50"},{"size":2450,"mtime":1640455451432,"results":"77","hashOfConfig":"50"},{"size":233,"mtime":1640907554315,"results":"78","hashOfConfig":"50"},{"size":3347,"mtime":1640185149908,"results":"79","hashOfConfig":"50"},{"size":2102,"mtime":1640734004725,"results":"80","hashOfConfig":"50"},{"size":3428,"mtime":1641149505699,"results":"81","hashOfConfig":"50"},{"size":1621,"mtime":1641149204425,"results":"82","hashOfConfig":"50"},{"size":5955,"mtime":1640455962038,"results":"83","hashOfConfig":"50"},{"size":1669,"mtime":1640185149903,"results":"84","hashOfConfig":"50"},{"size":3113,"mtime":1640917675822,"results":"85","hashOfConfig":"50"},{"size":1617,"mtime":1640185149905,"results":"86","hashOfConfig":"50"},{"size":361,"mtime":1640455451468,"results":"87","hashOfConfig":"50"},{"size":3707,"mtime":1640734004783,"results":"88","hashOfConfig":"50"},{"size":1307,"mtime":1640185149906,"results":"89","hashOfConfig":"50"},{"size":405,"mtime":1640637679313,"results":"90","hashOfConfig":"50"},{"size":4256,"mtime":1640889900810,"results":"91","hashOfConfig":"50"},{"size":1305,"mtime":1640185149904,"results":"92","hashOfConfig":"50"},{"size":3600,"mtime":1640639383544,"results":"93","hashOfConfig":"50"},{"size":3323,"mtime":1640455451396,"results":"94","hashOfConfig":"50"},{"size":253,"mtime":1639186857000,"results":"95","hashOfConfig":"50"},{"size":3655,"mtime":1641149023768,"results":"96","hashOfConfig":"50"},{"size":1985,"mtime":1640736855391,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"mdn67p",{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"101"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"101"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"101"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"101"},"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\index.js",["212","213","214"],"import SiteHeader from './components/siteHeader'\r\nimport MovieReviewPage from \"./pages/movieReviewPage\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Redirect, Switch, Link } from \"react-router-dom\";\r\nimport HomePage from \"./pages/homePage\";\r\nimport {PublicPage, Movies, Upcoming, MovieDetails} from \"./pages\";\r\nimport tvHomePage from \"./pages/tvHomePage\";\r\nimport TvPage from \"./pages/tvDetailsPage\";\r\nimport FavoriteMoviesPage from \"./pages/favoriteMoviesPage\";\r\nimport FavoriteTvsPage from \"./pages/favoriteTvsPage\";\r\nimport UpcomingMoviesPage from \"./pages/upcomingMoviesPage\";\r\nimport { QueryClientProvider, QueryClient } from \"react-query\";\r\nimport { ReactQueryDevtools } from 'react-query/devtools'\r\nimport MoviesContextProvider from \"./contexts/moviesContext\";\r\nimport AddMovieReviewPage from './pages/addMovieReviewPage'\r\nimport TopRatedMoviesPage from \"./pages/topRatedMoviesPage\";\r\nimport TvContextProvider from \"./contexts/tvContext\";\r\nimport AuthProvider from \"./authContext\";\r\nimport PrivateRoute from \"./privateRoute\";\r\nimport SignUpPage from \"./signupPage\";\r\nimport LoginPage from \"./loginPage\";\r\nimport AuthHeader from \"./authHeader\";\r\nimport MovieDetailsPage from \"./pages/movieDetailsPage\";\r\n\r\n\r\nconst queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            staleTime: 360000,\r\n            refetchInterval: 360000,\r\n            refetchOnWindowFocus: false\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <BrowserRouter>\r\n                <AuthProvider>\r\n                    <AuthHeader/>\r\n                    <SiteHeader/>\r\n                    <MoviesContextProvider>\r\n                        <TvContextProvider>\r\n                            <Switch>\r\n                                <Route exact path=\"/reviews/form\" component={AddMovieReviewPage}/>\r\n                                <PrivateRoute path=\"/movies/:id/reviews\" component={MovieReviewPage}/>\r\n                                <PrivateRoute exact path=\"/movies/upcoming\" component={UpcomingMoviesPage}/>\r\n                                <PrivateRoute path=\"/discover\" component={Movies}/>\r\n                                <PrivateRoute exact path=\"/movies/favorites\" component={FavoriteMoviesPage}/>\r\n                                <PrivateRoute exact path=\"/movies/toprated\" component={TopRatedMoviesPage}/>\r\n                                <PrivateRoute path=\"/movies/:id\" component={MovieDetailsPage}/>\r\n                                <PrivateRoute exact path=\"/tvshows/favorites\" component={FavoriteTvsPage}/>\r\n                                <PrivateRoute path=\"/tvshows/:id\" component={TvPage}/>\r\n                                <PrivateRoute path=\"/tvshows\" component={tvHomePage}/>\r\n                                <Route path=\"/signup\" component={SignUpPage}/>\r\n                                <Route path=\"/login\" component={LoginPage}/>\r\n                                <Route path=\"/public\" component={PublicPage}/>\r\n                                <Route exact path=\"/\" component={HomePage}/>\r\n                                <Redirect from=\"*\" to=\"/\"/>\r\n                            </Switch>\r\n                        </TvContextProvider>\r\n                    </MoviesContextProvider>\r\n                </AuthProvider>\r\n            </BrowserRouter>\r\n            <ReactQueryDevtools initialIsOpen={false}/>\r\n        </QueryClientProvider>\r\n    );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));",["215","216"],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\privateRoute.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authContext.js",["217","218"],"import React, { useState, createContext } from \"react\";\r\nimport { login, signup } from \"./api/movie-api\";\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const existingToken = localStorage.getItem(\"token\");\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [authToken, setAuthToken] = useState(existingToken);\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    //Function to put JWT token in local storage.\r\n    const setToken = (data) => {\r\n        localStorage.setItem(\"token\", data);\r\n        setAuthToken(data);\r\n    }\r\n\r\n    const authenticate = async (username, password) => {\r\n        const result = await login(username, password);\r\n        if (result.token) {\r\n            setToken(result.token)\r\n            setIsAuthenticated(true);\r\n            setUserName(username);\r\n        }\r\n    };\r\n\r\n    const register = async (username, password) => {\r\n        const result = await signup(username, password);\r\n        console.log(result.code);\r\n        return (result.code == 201) ? true : false;\r\n    };\r\n\r\n    const signout = () => {\r\n        setTimeout(() => setIsAuthenticated(false), 100);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                authenticate,\r\n                register,\r\n                signout,\r\n                userName\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\signupPage.js",["219"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\n\nconst SignUpPage = props => {\n    const context = useContext(AuthContext)\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordAgain, setPasswordAgain] = useState(\"\");\n    const [registered, setRegistered] = useState(false);\n\n    const register = () => {\n        if (password.length > 0 && password === passwordAgain) {\n            context.register(userName, password);\n            setRegistered(true);\n        }\n    }\n\n    const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n    if (registered === true) {\n        return <Redirect to=\"./login\" />;\n    }\n\n    return (\n        <>\n            <h2>SignUp page</h2>\n            <p>You must register a username and password to log in </p>\n            <input value={userName} placeholder=\"user name\" onChange={e => {\n                setUserName(e.target.value);\n            }}></input><br />\n            <input value={password} type=\"password\" placeholder=\"password\" onChange={e => {\n                setPassword(e.target.value);\n            }}></input><br />\n            <input value={passwordAgain} type=\"password\" placeholder=\"password again\" onChange={e => {\n                setPasswordAgain(e.target.value);\n            }}></input><br />\n            {/* Login web form  */}\n            <button onClick={register}>Register</button>\n        </>\n    );\n};\n\nexport default SignUpPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\authHeader.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\loginPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieReviewPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvDetailsPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\movieDetailsPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\homePage.js",["220","221","222"],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteMoviesPage.js",["223"],"import React, { useContext } from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { MoviesContext } from \"../contexts/moviesContext\";\r\nimport { useQueries } from \"react-query\";\r\nimport { getMovie } from \"../api/movie-api\";\r\nimport Spinner from '../components/spinner'\r\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\r\nimport WriteReview from \"../components/cardIcons/writeReview\";\r\n\r\nconst FavoriteMoviesPage = () => {\r\n    const {favorites: movieIds } = useContext(MoviesContext);\r\n\r\n    // Create an array of queries and run in parallel.\r\n    const favoriteMovieQueries = useQueries(\r\n        movieIds.map((movieId) => {\r\n            return {\r\n                queryKey: [\"movie\", { id: movieId }],\r\n                queryFn: getMovie,\r\n            };\r\n        })\r\n    );\r\n    // Check if any of the parallel queries is still loading.\r\n    const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\r\n\r\n    if (isLoading) {\r\n        return <Spinner />;\r\n    }\r\n    const movies = favoriteMovieQueries.map((q) => q.data);\r\n    const toDo = () => true;\r\n\r\n    return (\r\n        <PageTemplate\r\n            title=\"Favorite Movies\"\r\n            movies={movies}\r\n            action={(movie) => {\r\n                return (\r\n                    <>\r\n                        <RemoveFromFavorites movie={movie} />\r\n                        <WriteReview movie={movie} />\r\n                    </>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FavoriteMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\tvHomePage.js",["224"],"import React from \"react\";\r\nimport {useQuery} from \"react-query\";\r\nimport {getTvShows} from \"../api/movie-api\";\r\nimport Spinner from \"../components/spinner\";\r\nimport PageTemplate from \"../components/templateTvListPage\";\r\nimport AddToFavoritesIconTV from \"../components/cardIcons/addToFavoritesTV\";\r\n\r\nconst TvListPage = (props) => {\r\n    const {  data, error, isLoading, isError }  = useQuery('discover2', getTvShows)\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>\r\n    }\r\n    const tvs = data.results;\r\n\r\n    // Redundant, but necessary to avoid app crashing.\r\n    const favoritesTV = tvs.filter(m => m.favoriteTV)\r\n    localStorage.setItem('favoritesTV', JSON.stringify(favoritesTV))\r\n    const addToFavoritesTV = (tvId) => true\r\n\r\n    return (\r\n        <PageTemplate\r\n            title=\"Discover TV Shows\"\r\n            tvs={tvs}\r\n            action={(tv) => {\r\n                return <AddToFavoritesIconTV tv={tv} />\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default TvListPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\favoriteTvsPage.js",["225"],"import React, { useContext } from \"react\";\r\nimport PageTemplate from \"../components/templateTvListPage\";\r\nimport { TvContext } from \"../contexts/tvContext\";\r\nimport { useQueries } from \"react-query\";\r\nimport { getTvShow } from \"../api/movie-api\";\r\nimport Spinner from '../components/spinner'\r\nimport RemoveFromFavoritesTV from \"../components/cardIcons/removeFromFavoritesTV\";\r\n\r\nconst FavoriteTvsPage = () => {\r\n    const {favoritesTV: tvIds } = useContext(TvContext);\r\n\r\n    // Create an array of queries and run in parallel.\r\n    const favoriteTvQueries = useQueries(\r\n        tvIds.map((tvId) => {\r\n            return {\r\n                queryKey: [\"tv\", { id: tvId }],\r\n                queryFn: getTvShow,\r\n            };\r\n        })\r\n    );\r\n    // Check if any of the parallel queries is still loading.\r\n    const isLoading = favoriteTvQueries.find((m) => m.isLoading === true);\r\n\r\n    if (isLoading) {\r\n        return <Spinner />;\r\n    }\r\n    const tvs = favoriteTvQueries.map((q) => q.data);\r\n    const toDo = () => true;\r\n\r\n    return (\r\n        <PageTemplate\r\n            title=\"Favorite TV shows\"\r\n            tvs={tvs}\r\n            action={(tv) => {\r\n                return (\r\n                    <>\r\n                        <RemoveFromFavoritesTV tv={tv} />\r\n                    </>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default FavoriteTvsPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\topRatedMoviesPage.js",["226"],"import React from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { useQuery } from 'react-query'\r\nimport Spinner from '../components/spinner'\r\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList'\r\nimport { getTopRatedMovies } from \"../api/movie-api\";\r\n\r\nconst TopRatedMoviesPage = (props) => {\r\n    const {  data, error, isLoading, isError }  = useQuery('discover1', getTopRatedMovies)\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>\r\n    }\r\n    const movies2 = data.results;\r\n\r\n    // Redundant, but necessary to avoid app crashing.\r\n    const favorites = movies2.filter(m => m.favorite)\r\n    localStorage.setItem('favorites', JSON.stringify(favorites))\r\n    const addToFavorites = (movieId) => true\r\n\r\n    return (\r\n        <PageTemplate\r\n            title='Top Rated Movies'\r\n            movies={movies2}\r\n            action={(movie) => {\r\n                return <AddToWatchListIcon movie={movie} />\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default TopRatedMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\upcomingMoviesPage.js",["227","228"],"import React, {useContext} from \"react\";\r\nimport PageTemplate from \"../components/templateMovieListPage\";\r\nimport { useQuery } from 'react-query'\r\nimport Spinner from '../components/spinner'\r\nimport AddToWatchListIcon from '../components/cardIcons/addToWatchList'\r\nimport {getUpcomingMovies} from \"../api/movie-api\";\r\n\r\nconst UpcomingMoviesPage = (props) => {\r\n    const {  data, error, isLoading, isError }  = useQuery('discover', getUpcomingMovies)\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>\r\n    }\r\n    const movies1 = data.results;\r\n\r\n    // Redundant, but necessary to avoid app crashing.\r\n    const favorites = movies1.filter(m => m.favorite)\r\n    localStorage.setItem('favorites', JSON.stringify(favorites))\r\n    const addToFavorites = (movieId) => true\r\n\r\n    return (\r\n        <PageTemplate\r\n            title='Upcoming Movies'\r\n            movies={movies1}\r\n            action={(movie) => {\r\n                return <AddToWatchListIcon movie={movie} />\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default UpcomingMoviesPage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages\\addMovieReviewPage.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\moviesContext.js",["229"],"import React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport { getMovies } from \"../api/movie-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"load\":\r\n            return { movies: action.payload.result};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst MoviesContextProvider = (props) => {\r\n    const [myReviews, setMyReviews] = useState( {} )\r\n    const [favorites, setFavorites] = useState( [] )\r\n    const [watchLists, setWatchList] = useState( [] )\r\n    const [state, dispatch] = useReducer(reducer, { movies: []});\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMovies().then(result => {\r\n            console.log(result);\r\n            dispatch({ type: \"load\", payload: {result}});\r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n    const addToFavorites = (movie) => {\r\n        setFavorites([...favorites,movie.id])\r\n    };\r\n    // We will use this function in a later section\r\n    const removeFromFavorites = (movie) => {\r\n        setFavorites( favorites.filter(\r\n            (mId) => mId !== movie.id\r\n        ) )\r\n    };\r\n\r\n    const addToWatchList = (movie) => {\r\n        setWatchList([...watchLists,movie.id])\r\n        console.log([...watchLists,movie.id]);\r\n    };\r\n\r\n\r\n    // We will use this function in a later section\r\n    const removeFromWatchLists = (movie) => {\r\n        setWatchList( watchLists.filter(\r\n            (mId) => mId !== movie.id\r\n        ) )\r\n    };\r\n\r\n    const addReview = (movie, review) => {\r\n        setMyReviews( {...myReviews, [movie.id]: review } )\r\n    };\r\n\r\n    return (\r\n        <MoviesContext.Provider\r\n            value={{\r\n                movies: state.movies,\r\n                setAuthenticated,\r\n                favorites,\r\n                addToFavorites,\r\n                removeFromFavorites,\r\n                addReview,\r\n                addToWatchList,\r\n                removeFromWatchLists\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MoviesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MoviesContextProvider;\r\n\r\n","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\contexts\\tvContext.js",["230"],"import React, {useEffect, useReducer, useState} from \"react\";\r\nimport {getTvShows} from \"../api/movie-api\";\r\n\r\nexport const TvContext = React.createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"load\":\r\n            return { tvshows: action.payload.result};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst TvContextProvider = (props) => {\r\n\r\n    const [favoritesTV, setFavoritesTV] = useState( [] )\r\n    const [state, dispatch] = useReducer(reducer, { movies: []});\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTvShows().then(result => {\r\n            console.log(result);\r\n            dispatch({ type: \"load\", payload: {result}});\r\n        });\r\n    },[]);\r\n\r\n    const addToFavoritesTV = (tv) => {\r\n        setFavoritesTV([...favoritesTV,tv.id])\r\n    };\r\n    // We will use this function in a later section\r\n    const removeFromFavoritesTV = (tv) => {\r\n        setFavoritesTV( favoritesTV.filter(\r\n            (mId) => mId !== tv.id\r\n        ) )\r\n    };\r\n\r\n    return (\r\n        <TvContext.Provider\r\n            value={{\r\n                tvshows: state.tvshows,\r\n                setAuthenticated,\r\n                favoritesTV,\r\n                addToFavoritesTV,\r\n                removeFromFavoritesTV,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TvContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TvContextProvider;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\siteHeader\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavorites.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavorites.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\writeReview.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToFavoritesTV.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\removeFromFavoritesTV.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\cardIcons\\addToWatchList.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMoviePage\\index.js",["231"],"import React from \"react\";\r\nimport MovieHeader from \"../headerMovie\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport { getMovieImages } from \"../../api/movie-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    gridList: {\r\n        width: 450,\r\n        height: '100vh',\r\n    },\r\n}));\r\n\r\nconst TemplateMoviePage = ({ movie, children }) => {\r\n    const classes = useStyles();\r\n    const { data , error, isLoading, isError } = useQuery(\r\n        [\"images\", { id: movie.id }],\r\n        getMovieImages,\r\n    );\r\n\r\n    if (isLoading) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>;\r\n    }\r\n    const images = data.posters\r\n\r\n    return (\r\n        <>\r\n            <MovieHeader movie={movie} />\r\n            <Grid container spacing={5} style={{ padding: \"15px\" }}>\r\n                <Grid item xs={3}>\r\n                    <div className={classes.root}>\r\n                        <GridList cellHeight={500} className={classes.gridList} cols={1}>\r\n                            {images.map((image) => (\r\n                                <GridListTile key={image.file_path} className={classes.gridListTile} cols={1}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\r\n                                        alt={image.poster_path}\r\n                                    />\r\n                                </GridListTile>\r\n                            ))}\r\n                        </GridList>\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={9}>\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TemplateMoviePage;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\spinner\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvDetails\\index.js",["232"],"import React, { useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport NumbersIcon from \"@material-ui/icons/FormatListNumbered\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        listStyle: \"none\",\n        padding: theme.spacing(1.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    fab: {\n        position: \"fixed\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n}));\n\nconst TvDetails = ({ tv }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"h5\" component=\"h3\">\n                Overview\n            </Typography>\n\n            <Typography variant=\"h6\" component=\"p\">\n                {tv.overview}\n            </Typography>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <li>\n                    <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n                </li>\n                {tv.genres.map((g) => (\n                    <li key={g.name}>\n                        <Chip label={g.name} className={classes.chip} />\n                    </li>\n                ))}\n            </Paper>\n\n            <Paper component=\"ul\" className={classes.root}>\n                <Chip icon={<NumbersIcon />} label={`${tv.number_of_episodes} episodes.`} />\n                <Chip\n                    icon={<VideocamIcon />}\n                    label={`In Production: ${tv.in_production.toLocaleString()}`}\n\n                />\n                <Chip\n                    icon={<StarRate />}\n                    label={`${tv.vote_average} (${tv.vote_count}`}\n                />\n                <Chip label={`Released: ${tv.first_air_date}`} />\n            </Paper>\n\n            <Fab\n                color=\"secondary\"\n                variant=\"extended\"\n                className={classes.fab}\n            >\n                <NavigationIcon />\n                Reviews\n            </Fab>\n        </>\n    );\n};\nexport default  TvDetails;","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReview\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieDetails\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvPage\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateMovieListPage\\index.js",["233","234"],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\templateTvListPage\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\reviewForm\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovie\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieReviews\\index.js",["235"],"import React, { useEffect, useState }  from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {getMovieReviews} from \"../../api/movie-api\";\r\nimport { excerpt } from \"../../util\";\r\nimport {setRef} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 550,\r\n    },\r\n});\r\n\r\nexport default function MovieReviews({ movie }) {\r\n    const classes = useStyles();\r\n    const [reviews, setReviews] = useState([]);\r\n    useEffect(  () => {\r\n        getMovieReviews(movie.id).then((reviews) => {\r\n            setReviews(reviews.results);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // //  let reviews = useState([]);\r\n    // const addToReviews = async (movie) => {\r\n    //     try {\r\n    //         let temp = [];\r\n    //         temp = await getMovieReviews(movie.id);\r\n    //         //console.log(temp);\r\n    //        // reviews.push(...temp.results);\r\n    //         setReviews([...temp.results,temp.id]);\r\n    //     } catch (error) {\r\n    //         console.log('error', error);\r\n    //     }\r\n    // }\r\n    // addToReviews(movie);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"reviews table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Author</TableCell>\r\n                        <TableCell align=\"center\">Excerpt</TableCell>\r\n                        <TableCell align=\"right\">More</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {reviews.map((r) => (\r\n                        <TableRow key={r.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {r.author}\r\n                            </TableCell>\r\n                            <TableCell>{excerpt(r.content)}</TableCell>\r\n                            <TableCell>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/reviews/${r.id}`,\r\n                                        state: {\r\n                                            review: r,\r\n                                            movie: movie,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    Full Review\r\n                                </Link>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTv\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterTvCard\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerTvList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\filterMoviesCard\\index.js",["236","237","238","239"],"import React, {useEffect, useReducer, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\r\nimport {getGenres, getMovies} from \"../../api/movie-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(255, 0, 0)\",\r\n    },\r\n    media: { height: 300 },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n        backgroundColor: \"rgb(255, 255, 255)\",\r\n    },\r\n}));\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"load\":\r\n            return { genres: action.payload.result};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default function FilterMoviesCard(props) {\r\n    const classes = useStyles();\r\n    const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n    const [state, dispatch] = useReducer(reducer, { genres: []});\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getGenres().then(result => {\r\n            console.log(result);\r\n            dispatch({ type: \"load\", payload: {result}});\r\n        });\r\n    },[]);\r\n\r\n    if (isLoading) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    if (isError) {\r\n        return <h1>{error.message}</h1>;\r\n    }\r\n    const genres = data.genres;\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n\r\n    const handleChange = (e, type, value) => {\r\n        e.preventDefault();\r\n        props.onUserInput(type, value); // NEW\r\n    };\r\n\r\n    const handleTextChange = (e, props) => {\r\n        handleChange(e, \"name\", e.target.value);\r\n    };\r\n\r\n    const handleGenreChange = (e) => {\r\n        handleChange(e, \"genre\", e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h1\">\r\n                    <SearchIcon fontSize=\"large\"/>\r\n                    Filter the movies.\r\n                </Typography>\r\n                <TextField\r\n                    className={classes.formControl}\r\n                    id=\"filled-search\"\r\n                    label=\"Search field\"\r\n                    type=\"search\"\r\n                    value={props.titleFilter}\r\n                    variant=\"filled\"\r\n                    onChange={handleTextChange}\r\n                />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n                    <Select\r\n                        labelId=\"genre-label\"\r\n                        id=\"genre-select\"\r\n                        value={props.genreFilter}\r\n                        onChange={handleGenreChange}\r\n                    >\r\n                        {genres.map((genre) => {\r\n                            return (\r\n                                <MenuItem key={genre.id} value={genre.id}>\r\n                                    {genre.name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n            </CardContent>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={img}\r\n                title=\"Filter\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h1\">\r\n                    <SearchIcon fontSize=\"large\"/>\r\n                    Filter the movies.\r\n                    <br/>\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n\r\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\headerMovieList\\index.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\movieCard\\index.js",["240","241","242","243","244"],"import React, { useContext  } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PlayListAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: { maxWidth: 345 },\r\n    media: { height: 500 },\r\n    avatar: {\r\n        backgroundColor: \"rgb(255, 0, 0)\",\r\n    },\r\n});\r\n\r\nexport default function MovieCard({ movie, action }) {\r\n    const classes = useStyles();\r\n    const { favorites, addToFavorites } = useContext(MoviesContext);\r\n    const { watchLists, addToWatchList } = useContext(MoviesContext);\r\n\r\n    if (favorites.find((id) => id === movie.id)) {\r\n        movie.favorite = true;\r\n    } else {\r\n        movie.favorite = false\r\n    }\r\n\r\n    const handleAddToFavorite = (e) => {\r\n        e.preventDefault();\r\n        addToFavorites(movie);\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardHeader\r\n                className={classes.header}\r\n                avatar={\r\n                    movie.favorite ? (\r\n                        <Avatar className={classes.avatar}>\r\n                            <FavoriteIcon />\r\n                        </Avatar>\r\n                    ) : null\r\n                }\r\n                title={\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {movie.title}{\" \"}\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={\r\n                    movie.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                        : img\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\">\r\n                            <CalendarIcon fontSize=\"small\" />\r\n                            {movie.release_date}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" component=\"p\">\r\n                            <StarRateIcon fontSize=\"small\" />\r\n                            {\"  \"} {movie.vote_average}{\" \"}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                {action(movie)}\r\n                <Link to={`/movies/${movie.id}`}>\r\n                    <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n                        More Info ...\r\n                    </Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\components\\tvCard\\index.js",["245","246"],"import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { TvContext } from \"../../contexts/tvContext\";\n\nconst useStyles = makeStyles({\n    card: { maxWidth: 345 },\n    media: { height: 500 },\n    avatar: {\n        backgroundColor: \"rgb(255, 0, 0)\",\n    },\n});\n\nexport default function TvCard({ tv, action }) {\n    const classes = useStyles();\n    const { favoritesTV, addToFavoritesTV } = useContext(TvContext);\n\n    if (favoritesTV.find((id) => id === tv.id)) {\n        tv.favoriteTV = true;\n    } else {\n        tv.favoriteTV = false\n    }\n\n\n    const handleAddToFavoriteTV = (e) => {\n        e.preventDefault();\n        addToFavoritesTV(tv);\n    };\n\n\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.header}\n                avatar={\n                    tv.favoriteTV ? (\n                        <Avatar className={classes.avatar}>\n                            <FavoriteIcon />\n                        </Avatar>\n                    ) : null\n                }\n                title={\n                    <Typography variant=\"h5\" component=\"p\">\n                        {tv.name}{\" \"}\n                    </Typography>\n                }\n            />\n            <CardMedia\n                className={classes.media}\n                image={\n                    tv.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${tv.poster_path}`\n                        : img\n                }\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <CalendarIcon fontSize=\"small\" />\n                            {tv.first_air_date}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <StarRateIcon fontSize=\"small\" />\n                            {\"  \"} {tv.vote_average}{\" \"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions disableSpacing>\n                {action(tv)}\n                <Link to={`/tvshows/${tv.id}`}>\n                <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n                    More Info ...\n                </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}","C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\util.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\api\\movie-api.js",[],"C:\\Users\\allen\\Documents\\GitHub\\WebAppDev2Assignment2\\reactApp\\src\\pages.js",["247","248"],"import React, {useReducer} from 'react';\r\nimport { useContext} from 'react';\r\nimport { MoviesContext } from './contexts/moviesContext';\r\nimport PageTemplate from \"./components/templateMovieListPage\";\r\nimport PageDetailsTemplate from \"./components/templateMoviePage\";\r\nimport AddToFavoritesIcon from \"./components/cardIcons/addToFavorites\";\r\nimport {getMovies, getUpcomingMovies} from \"./api/movie-api\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"load\":\r\n            return { movies: action.payload.result};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const PublicPage = () => {\r\n    return <h2>Public page</h2>\r\n}\r\n\r\nexport const Movies = () => {\r\n    const context = useContext(MoviesContext);\r\n    return <>\r\n        <h2>Movies Data </h2>\r\n        <PageTemplate\r\n            title=\"Discover Movies\"\r\n            movies={context.movies.results}\r\n            action={(movie) => {\r\n                return <AddToFavoritesIcon movie={movie} />\r\n            }}\r\n        />\r\n    </>\r\n}\r\n\r\nexport const Upcoming = () => {\r\n    const [state, dispatch] = useReducer(reducer, { movies: []});\r\n    getUpcomingMovies().then(result => {\r\n        console.log(result);\r\n        dispatch({ type: \"load\", payload: {result}});\r\n    });\r\n    const context = useContext(MoviesContext);\r\n    return <>\r\n        <h2>Movies Data </h2>\r\n        <PageTemplate\r\n            title=\"Upcoming Movies\"\r\n            movies={context.movies.results}\r\n            action={(movie) => {\r\n                return <AddToFavoritesIcon movie={movie} />\r\n            }}\r\n        />\r\n    </>\r\n}\r\n\r\nexport const MovieDetails = () => {\r\n    const context = useContext(MoviesContext);\r\n    return <>\r\n        <h2>My Profile </h2>\r\n        <PageDetailsTemplate movie={context.movies.results}>\r\n            <MovieDetails movie={context.movies.results} />\r\n        </PageDetailsTemplate>\r\n    </>\r\n}\r\n\r\nexport const HomePage = () => {\r\n    return  <h2>Home page</h2>\r\n}\r\n",{"ruleId":"249","severity":1,"message":"250","line":5,"column":50,"nodeType":"251","messageId":"252","endLine":5,"endColumn":54},{"ruleId":"249","severity":1,"message":"253","line":7,"column":29,"nodeType":"251","messageId":"252","endLine":7,"endColumn":37},{"ruleId":"249","severity":1,"message":"254","line":7,"column":39,"nodeType":"251","messageId":"252","endLine":7,"endColumn":51},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"249","severity":1,"message":"259","line":9,"column":12,"nodeType":"251","messageId":"252","endLine":9,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":30,"column":29,"nodeType":"262","messageId":"263","endLine":30,"endColumn":31},{"ruleId":"249","severity":1,"message":"264","line":19,"column":13,"nodeType":"251","messageId":"252","endLine":19,"endColumn":17},{"ruleId":"249","severity":1,"message":"265","line":7,"column":10,"nodeType":"251","messageId":"252","endLine":7,"endColumn":20},{"ruleId":"249","severity":1,"message":"266","line":8,"column":10,"nodeType":"251","messageId":"252","endLine":8,"endColumn":23},{"ruleId":"249","severity":1,"message":"267","line":29,"column":11,"nodeType":"251","messageId":"252","endLine":29,"endColumn":25},{"ruleId":"249","severity":1,"message":"268","line":29,"column":11,"nodeType":"251","messageId":"252","endLine":29,"endColumn":15},{"ruleId":"249","severity":1,"message":"269","line":23,"column":11,"nodeType":"251","messageId":"252","endLine":23,"endColumn":27},{"ruleId":"249","severity":1,"message":"268","line":28,"column":11,"nodeType":"251","messageId":"252","endLine":28,"endColumn":15},{"ruleId":"249","severity":1,"message":"267","line":23,"column":11,"nodeType":"251","messageId":"252","endLine":23,"endColumn":25},{"ruleId":"249","severity":1,"message":"265","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"267","line":23,"column":11,"nodeType":"251","messageId":"252","endLine":23,"endColumn":25},{"ruleId":"249","severity":1,"message":"270","line":20,"column":12,"nodeType":"251","messageId":"252","endLine":20,"endColumn":25},{"ruleId":"249","severity":1,"message":"270","line":19,"column":12,"nodeType":"251","messageId":"252","endLine":19,"endColumn":25},{"ruleId":"249","severity":1,"message":"271","line":10,"column":9,"nodeType":"251","messageId":"252","endLine":10,"endColumn":15},{"ruleId":"249","severity":1,"message":"272","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"273","line":39,"column":12,"nodeType":"251","messageId":"252","endLine":39,"endColumn":22},{"ruleId":"249","severity":1,"message":"274","line":39,"column":24,"nodeType":"251","messageId":"252","endLine":39,"endColumn":37},{"ruleId":"249","severity":1,"message":"275","line":13,"column":9,"nodeType":"251","messageId":"252","endLine":13,"endColumn":15},{"ruleId":"249","severity":1,"message":"276","line":14,"column":20,"nodeType":"251","messageId":"252","endLine":14,"endColumn":29},{"ruleId":"249","severity":1,"message":"277","line":44,"column":12,"nodeType":"251","messageId":"252","endLine":44,"endColumn":17},{"ruleId":"249","severity":1,"message":"270","line":45,"column":12,"nodeType":"251","messageId":"252","endLine":45,"endColumn":25},{"ruleId":"249","severity":1,"message":"278","line":45,"column":27,"nodeType":"251","messageId":"252","endLine":45,"endColumn":43},{"ruleId":"249","severity":1,"message":"279","line":11,"column":8,"nodeType":"251","messageId":"252","endLine":11,"endColumn":23},{"ruleId":"249","severity":1,"message":"280","line":14,"column":8,"nodeType":"251","messageId":"252","endLine":14,"endColumn":18},{"ruleId":"249","severity":1,"message":"281","line":32,"column":13,"nodeType":"251","messageId":"252","endLine":32,"endColumn":23},{"ruleId":"249","severity":1,"message":"282","line":32,"column":25,"nodeType":"251","messageId":"252","endLine":32,"endColumn":39},{"ruleId":"249","severity":1,"message":"283","line":40,"column":11,"nodeType":"251","messageId":"252","endLine":40,"endColumn":30},{"ruleId":"249","severity":1,"message":"280","line":13,"column":8,"nodeType":"251","messageId":"252","endLine":13,"endColumn":18},{"ruleId":"249","severity":1,"message":"284","line":39,"column":11,"nodeType":"251","messageId":"252","endLine":39,"endColumn":32},{"ruleId":"249","severity":1,"message":"276","line":7,"column":9,"nodeType":"251","messageId":"252","endLine":7,"endColumn":18},{"ruleId":"249","severity":1,"message":"277","line":37,"column":12,"nodeType":"251","messageId":"252","endLine":37,"endColumn":17},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Upcoming' is defined but never used.","'MovieDetails' is defined but never used.","no-native-reassign",["285"],"no-negated-in-lhs",["286"],"'authToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'from' is assigned a value but never used.","'useContext' is defined but never used.","'MoviesContext' is defined but never used.","'addToFavorites' is assigned a value but never used.","'toDo' is assigned a value but never used.","'addToFavoritesTV' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'pageFilter' is assigned a value but never used.","'setPageFilter' is assigned a value but never used.","'setRef' is defined but never used.","'getMovies' is defined but never used.","'state' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'PlayListAddIcon' is defined but never used.","'IconButton' is defined but never used.","'watchLists' is assigned a value but never used.","'addToWatchList' is assigned a value but never used.","'handleAddToFavorite' is assigned a value but never used.","'handleAddToFavoriteTV' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]